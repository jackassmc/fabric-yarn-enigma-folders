CLASS none/cu net/minecraft/util/math/Facing
	CLASS none/cu$a Axis
		FIELD a X Lnone/cu$a;
		FIELD b Y Lnone/cu$a;
		FIELD c Z Lnone/cu$a;
		FIELD d BY_NAME_MAP Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f plane Lnone/cu$c;
		METHOD <init> (Ljava/lang/String;ILjava/lang/String;Lnone/cu$c;)V
			ARG 0 name
			ARG 1 plane
		METHOD a getName ()Ljava/lang/String;
		METHOD a byName (Ljava/lang/String;)Lnone/cu$a;
			ARG 0 name
		METHOD a matches (Lnone/cu;)Z
			ARG 0 facing
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lnone/cu$c;
		METHOD m asString ()Ljava/lang/String;
	CLASS none/cu$b Direction
		FIELD a POSITIVE Lnone/cu$b;
		FIELD b NEGATIVE Lnone/cu$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;)V
			ARG 0 offset
			ARG 1 desc
		METHOD a offset ()I
	CLASS none/cu$c Plane
		FIELD a HORIZONTAL Lnone/cu$c;
		FIELD b VERTICAL Lnone/cu$c;
		METHOD a getFacings ()[Lnone/cu;
		METHOD a getRandomFacing (Ljava/util/Random;)Lnone/cu;
			ARG 0 random
		METHOD a matches (Lnone/cu;)Z
			ARG 0 facing
		METHOD iterator iterator ()Ljava/util/Iterator;
	FIELD a DOWN Lnone/cu;
	FIELD b UP Lnone/cu;
	FIELD c NORTH Lnone/cu;
	FIELD d SOUTH Lnone/cu;
	FIELD e WEST Lnone/cu;
	FIELD f EAST Lnone/cu;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lnone/cu$a;
	FIELD l direction Lnone/cu$b;
	FIELD m vector Lnone/dk;
	FIELD n ALL [Lnone/cu;
	FIELD o HORIZONTAL [Lnone/cu;
	FIELD p nameToFacing Ljava/util/Map;
	METHOD <init> (Ljava/lang/String;IIIILjava/lang/String;Lnone/cu$b;Lnone/cu$a;Lnone/dk;)V
		ARG 0 id
		ARG 1 idOpposite
		ARG 2 idHorizontal
		ARG 3 name
		ARG 4 direction
		ARG 5 axis
		ARG 6 vector
	METHOD a getId ()I
	METHOD a fromRotation (D)Lnone/cu;
		ARG 0 rotation
	METHOD a byId (I)Lnone/cu;
		ARG 0 id
	METHOD a byName (Ljava/lang/String;)Lnone/cu;
		ARG 0 name
	METHOD a random (Ljava/util/Random;)Lnone/cu;
		ARG 0 rand
	METHOD a rotateClockwise (Lnone/cu$a;)Lnone/cu;
		ARG 0 axis
	METHOD a get (Lnone/cu$b;Lnone/cu$a;)Lnone/cu;
		ARG 0 direction
		ARG 1 axis
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Lnone/cu;
		ARG 0 value
	METHOD c getDirection ()Lnone/cu$b;
	METHOD d getOpposite ()Lnone/cu;
	METHOD e rotateYClockwise ()Lnone/cu;
	METHOD f rotateYCounterclockwise ()Lnone/cu;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lnone/cu$a;
	METHOD l asRotation ()F
	METHOD m asString ()Ljava/lang/String;
	METHOD n getVector ()Lnone/dk;
	METHOD o rotateXClockwise ()Lnone/cu;
	METHOD q rotateZClockwise ()Lnone/cu;
	METHOD values values ()[Lnone/cu;
