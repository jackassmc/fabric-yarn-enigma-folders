CLASS dnd net/minecraft/client/render/chunk/ChunkBatcher
	CLASS dnd$a ChunkUploadTask
		FIELD b task Lcom/google/common/util/concurrent/ListenableFutureTask;
		FIELD c priority D
		METHOD <init> (Ldnd;Lcom/google/common/util/concurrent/ListenableFutureTask;D)V
			ARG 1 task
			ARG 2 priority
	FIELD a LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD b THREAD_FACTORY Ljava/util/concurrent/ThreadFactory;
	FIELD c bufferCount I
	FIELD d workerThreads Ljava/util/List;
	FIELD e workers Ljava/util/List;
	FIELD f pendingChunks Ljava/util/concurrent/PriorityBlockingQueue;
	FIELD g availableBuffers Ljava/util/concurrent/BlockingQueue;
	FIELD h displayListBufferRenderer Lcun;
	FIELD i vboBufferRenderer Lcur;
	FIELD j pendingUploads Ljava/util/Queue;
	FIELD k clientThreadWorker Ldne;
	FIELD l cameraPosition Lcry;
	METHOD a getDebugString ()Ljava/lang/String;
	METHOD a runTasksSync (J)Z
		ARG 1 endTime
	METHOD a upload (Lbgu;Lcum;Ldnh;Ldnf;D)Lcom/google/common/util/concurrent/ListenableFuture;
		ARG 1 layer
		ARG 2 bufferBuilder
		ARG 3 chunkRenderer
		ARG 4 chunkRenderData
	METHOD a setCameraPosition (Lcry;)V
		ARG 1 cameraPosition
	METHOD a uploadDisplayList (Lcum;I)V
		ARG 1 bufferBuilder
		ARG 2 index
	METHOD a uploadVbo (Lcum;Lcuq;)V
		ARG 1 bufferBuilder
		ARG 2 glBuffer
	METHOD a addAvailableBuffer (Ldke;)V
	METHOD a rebuild (Ldnh;)Z
		ARG 1 renderer
	METHOD b getCameraPosition ()Lcry;
	METHOD b rebuildSync (Ldnh;)Z
		ARG 1 renderer
	METHOD c reset ()V
	METHOD c resortTransparency (Ldnh;)Z
		ARG 1 renderer
	METHOD d getNextAvailableBuffer ()Ldke;
	METHOD e getNextChunkRenderDataTask ()Ldnc;
	METHOD f clear ()V
	METHOD g isEmpty ()Z
	METHOD h stop ()V
