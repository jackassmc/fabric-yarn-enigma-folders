CLASS bxa net/minecraft/world/chunk/ChunkStatus
	CLASS bxa$a Task
		METHOD doWork (Lbxa;Lvf;Lbww;Lcjc;Lvi;Ljava/util/function/Function;Ljava/util/List;Lbwv;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 targetStatus
			ARG 3 generator
	CLASS bxa$b ChunkType
		FIELD a PROTOCHUNK Lbxa$b;
		FIELD b LEVELCHUNK Lbxa$b;
	CLASS bxa$c SimpleTask
		METHOD doWork (Lbxa;Lvf;Lbww;Lcjc;Lvi;Ljava/util/function/Function;Ljava/util/List;Lbwv;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 targetStatus
			ARG 3 generator
		METHOD doWork (Lvf;Lbww;Ljava/util/List;Lbwv;)V
			ARG 2 generator
			ARG 4 chunk
	FIELD a EMPTY Lbxa;
	FIELD b STRUCTURE_STARTS Lbxa;
	FIELD c STRUCTURE_REFERENCES Lbxa;
	FIELD d BIOMES Lbxa;
	FIELD e NOISE Lbxa;
	FIELD f SURFACE Lbxa;
	FIELD g CARVERS Lbxa;
	FIELD h LIQUID_CARVERS Lbxa;
	FIELD i FEATURES Lbxa;
	FIELD j LIGHT Lbxa;
	FIELD k SPAWN Lbxa;
	FIELD l HEIGHTMAPS Lbxa;
	FIELD m FULL Lbxa;
	FIELD n PRE_CARVER_HEIGHTMAPS Ljava/util/EnumSet;
	FIELD o POST_CARVER_HEIGHTMAPS Ljava/util/EnumSet;
	FIELD p DISTANCE_TO_TARGET_GENERATION_STATUS Ljava/util/List;
	FIELD q STATUS_TO_TARGET_GENERATION_RADIUS Lit/unimi/dsi/fastutil/ints/IntList;
	FIELD r name Ljava/lang/String;
	FIELD s index I
	FIELD t previous Lbxa;
	FIELD u task Lbxa$a;
	FIELD v taskMargin I
	FIELD w chunkType Lbxa$b;
	FIELD x surfaceGenerated Ljava/util/EnumSet;
	METHOD <init> (Ljava/lang/String;Lbxa;ILjava/util/EnumSet;Lbxa$b;Lbxa$a;)V
		ARG 1 name
		ARG 2 previous
		ARG 3 taskMargin
		ARG 4 surfaceGenerated
		ARG 5 type
		ARG 6 task
	METHOD a createOrderedList ()Ljava/util/List;
	METHOD a getTargetGenerationStatus (I)Lbxa;
		ARG 0 distance
	METHOD a getTargetGenerationRadius (Lbxa;)I
		ARG 0 status
	METHOD a get (Ljava/lang/String;)Lbxa;
		ARG 0 id
	METHOD a register (Ljava/lang/String;Lbxa;ILjava/util/EnumSet;Lbxa$b;Lbxa$a;)Lbxa;
	METHOD a register (Ljava/lang/String;Lbxa;ILjava/util/EnumSet;Lbxa$b;Lbxa$c;)Lbxa;
	METHOD a runTask (Lvf;Lbww;Lcjc;Lvi;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
		ARG 2 chunkGenerator
	METHOD b getMaxTargetGenerationRadius ()I
	METHOD b isAtLeast (Lbxa;)Z
		ARG 1 chunk
	METHOD c getIndex ()I
	METHOD d getName ()Ljava/lang/String;
	METHOD e getPrevious ()Lbxa;
	METHOD f getTaskMargin ()I
	METHOD g getChunkType ()Lbxa$b;
	METHOD h isSurfaceGenerated ()Ljava/util/EnumSet;
