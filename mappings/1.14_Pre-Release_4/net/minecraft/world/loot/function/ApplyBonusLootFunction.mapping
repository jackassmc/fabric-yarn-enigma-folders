CLASS cpi net/minecraft/world/loot/function/ApplyBonusLootFunction
	CLASS cpi$a BinomialWithBonusCount
		FIELD a ID Lqs;
		FIELD b extra I
		FIELD c probability F
		METHOD <init> (IF)V
			ARG 1 extra
			ARG 2 probability
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpi$b;
			ARG 0 json
			ARG 1 context
	CLASS cpi$b Formula
		METHOD a getId ()Lqs;
		METHOD a toJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V
			ARG 1 json
			ARG 2 context
		METHOD a getValue (Ljava/util/Random;II)I
			ARG 1 random
			ARG 2 initialCount
			ARG 3 enchantmentLevel
	CLASS cpi$c FormulaFactory
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpi$b;
			ARG 1 functionJson
			ARG 2 context
	CLASS cpi$d OreDrops
		FIELD a ID Lqs;
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpi$b;
			ARG 0 json
			ARG 1 context
	CLASS cpi$e Factory
	CLASS cpi$f UniformBonusCount
		FIELD a ID Lqs;
		FIELD b bonusMultiplier I
		METHOD <init> (I)V
			ARG 1 bonusMultiplier
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpi$b;
			ARG 0 json
			ARG 1 context
	FIELD a FACTORIES Ljava/util/Map;
	FIELD c enchantment Lbfh;
	FIELD d formula Lcpi$b;
	METHOD <init> ([Lcqw;Lbfh;Lcpi$b;)V
		ARG 1 conditions
		ARG 2 enchantment
		ARG 3 formula
	METHOD a oreDrops (Lbfh;)Lcps$a;
		ARG 0 enchantment
	METHOD a binomialWithBonusCount (Lbfh;FI)Lcps$a;
		ARG 0 enchantment
		ARG 1 probability
		ARG 2 extra
	METHOD a uniformBonusCount (Lbfh;I)Lcps$a;
		ARG 0 enchantment
		ARG 1 bonusMultiplier
	METHOD a (Lbfh;IF[Lcqw;)Lcpt;
		ARG 3 conditions
	METHOD a (Lbfh;I[Lcqw;)Lcpt;
		ARG 2 conditions
	METHOD a (Lbfh;[Lcqw;)Lcpt;
		ARG 1 conditions
	METHOD b uniformBonusCount (Lbfh;)Lcps$a;
		ARG 0 enchantment
	METHOD b (Lbfh;[Lcqw;)Lcpt;
		ARG 1 conditions
