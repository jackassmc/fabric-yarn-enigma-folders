CLASS cv net/minecraft/util/math/Facing
	CLASS cv$a Axis
		FIELD a X Lcv$a;
		FIELD b Y Lcv$a;
		FIELD c Z Lcv$a;
		FIELD d BY_NAME_MAP Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f plane Lcv$c;
		METHOD <init> (Ljava/lang/String;ILjava/lang/String;Lcv$c;)V
			ARG 0 name
			ARG 1 plane
		METHOD a getName ()Ljava/lang/String;
		METHOD a matches (Lcv;)Z
			ARG 0 facing
		METHOD a byName (Ljava/lang/String;)Lcv$a;
			ARG 0 name
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lcv$c;
		METHOD m asString ()Ljava/lang/String;
		METHOD values values ()[Lcv$a;
	CLASS cv$b Direction
		FIELD a POSITIVE Lcv$b;
		FIELD b NEGATIVE Lcv$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;)V
			ARG 0 offset
			ARG 1 desc
		METHOD a offset ()I
	CLASS cv$c Plane
		FIELD a HORIZONTAL Lcv$c;
		FIELD b VERTICAL Lcv$c;
		METHOD a getFacings ()[Lcv;
		METHOD a apply (Lcv;)Z
			ARG 0 facing
		METHOD a getRandomFacing (Ljava/util/Random;)Lcv;
			ARG 0 random
		METHOD iterator iterator ()Ljava/util/Iterator;
	FIELD a DOWN Lcv;
	FIELD b UP Lcv;
	FIELD c NORTH Lcv;
	FIELD d SOUTH Lcv;
	FIELD e WEST Lcv;
	FIELD f EAST Lcv;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lcv$a;
	FIELD l direction Lcv$b;
	FIELD m vector Ldl;
	FIELD n ALL [Lcv;
	FIELD o HORIZONTAL [Lcv;
	FIELD p nameToFacing Ljava/util/Map;
	METHOD <init> (Ljava/lang/String;IIIILjava/lang/String;Lcv$b;Lcv$a;Ldl;)V
		ARG 0 id
		ARG 1 idOpposite
		ARG 2 idHorizontal
		ARG 3 name
		ARG 4 direction
		ARG 5 axis
		ARG 6 vector
	METHOD a getId ()I
	METHOD a fromRotation (D)Lcv;
		ARG 0 rotation
	METHOD a getFacing (FFF)Lcv;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a byId (I)Lcv;
		ARG 0 id
	METHOD a rotateClockwise (Lcv$a;)Lcv;
		ARG 0 axis
	METHOD a get (Lcv$b;Lcv$a;)Lcv;
		ARG 0 direction
		ARG 1 axis
	METHOD a byName (Ljava/lang/String;)Lcv;
		ARG 0 name
	METHOD a random (Ljava/util/Random;)Lcv;
		ARG 0 rand
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Lcv;
		ARG 0 value
	METHOD c getDirection ()Lcv$b;
	METHOD d getOpposite ()Lcv;
	METHOD e rotateYClockwise ()Lcv;
	METHOD f rotateYCounterclockwise ()Lcv;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lcv$a;
	METHOD l asRotation ()F
	METHOD m asString ()Ljava/lang/String;
	METHOD n getVector ()Ldl;
	METHOD o rotateXClockwise ()Lcv;
	METHOD q rotateZClockwise ()Lcv;
	METHOD values values ()[Lcv;
