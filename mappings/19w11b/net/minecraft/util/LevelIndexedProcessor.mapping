CLASS ciw net/minecraft/util/LevelIndexedProcessor
	CLASS ciw$1
		METHOD rehash (I)V
			ARG 1 newN
	CLASS ciw$2
		METHOD rehash (I)V
			ARG 1 newN
	FIELD a maxLevelCount I
	FIELD b toProcess [Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;
	FIELD c levels Lit/unimi/dsi/fastutil/longs/Long2ByteFunction;
	FIELD d minUnprocessedLevel I
	FIELD e hasUpdates Z
	METHOD <init> (III)V
		ARG 1 levelCount
		ARG 2 initLevelCapacity
		ARG 3 initTotalCapacity
	METHOD a updateMinUnprocessed (I)V
		ARG 1 maxLevel
	METHOD a minLevel (II)I
		ARG 1 level
		ARG 2 max
	METHOD a isInvalidIndex (J)Z
		ARG 1 index
	METHOD a setLevel (JI)V
		ARG 1 index
		ARG 3 level
	METHOD a addWithLevel (JII)V
		ARG 1 id
		ARG 3 level
		ARG 4 targetLevel
	METHOD a removeFromLevel (JIIZ)V
		ARG 1 index
		ARG 3 level
		ARG 4 maxLevel
		ARG 5 removeFromLevelMap
	METHOD a processLevel (JIZ)V
		ARG 1 index
		ARG 3 level
	METHOD a getMergedLevel (JJI)I
		ARG 1 position
		ARG 3 source
		ARG 5 newLevel
	METHOD a scheduleUpdate (JJIIIZ)V
		ARG 1 sourceIndex
		ARG 3 updateIndex
		ARG 5 newBaseLevelAtUpdate
		ARG 6 currentLevelAtUpdate
		ARG 7 oldLevelAtUpdate
		ARG 8 modeFlag
	METHOD a scheduleNewLevelUpdate (JJIZ)V
		ARG 1 sourceIndex
		ARG 3 updateIndex
		ARG 5 lastLevel
	METHOD b hasLevelUpdates ()Z
	METHOD b updateLevels (I)I
		ARG 1 maxSteps
	METHOD b getBaseLevel (JJI)I
		ARG 1 source
		ARG 3 position
		ARG 5 previousLevel
	METHOD b scheduleUpdateRecursively (JJIZ)V
		ARG 1 sourceIndex
		ARG 3 updateIndex
		ARG 5 sourceLevel
		ARG 6 modeFlag
	METHOD c getLevel (J)I
		ARG 1 index
	METHOD e remove (J)V
		ARG 1 index
	METHOD f scheduleNewUpdate (J)V
		ARG 1 idx
