CLASS crd net/minecraft/util/math/BoundingBox
	FIELD a minX D
	FIELD b minY D
	FIELD c minZ D
	FIELD d maxX D
	FIELD e maxY D
	FIELD f maxZ D
	METHOD <init> (DDDDDD)V
		ARG 1 x1
		ARG 3 y1
		ARG 5 z1
	METHOD <init> (Lcri;Lcri;)V
		ARG 1 min
		ARG 2 max
	METHOD <init> (Lev;Lev;)V
		ARG 1 min
	METHOD a averageDimension ()D
	METHOD a shrink (DDD)Lcrd;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD a intersects (DDDDDD)Z
		ARG 1 minX
		ARG 3 minY
		ARG 5 minZ
		ARG 7 maxX
		ARG 9 maxY
		ARG 11 maxZ
	METHOD a from (Lche;)Lcrd;
	METHOD a intersection (Lcrd;)Lcrd;
	METHOD a stretch (Lcri;)Lcrd;
	METHOD a intersects (Lcri;Lcri;)Z
	METHOD a offset (Lev;)Lcrd;
		ARG 1 blockPos
	METHOD a getMin (Lfa$a;)D
		ARG 1 axis
	METHOD a rayTrace (Ljava/lang/Iterable;Lcri;Lcri;Lev;)Lcre;
		ARG 0 boxes
		ARG 1 from
		ARG 2 to
		ARG 3 blockPos
	METHOD a ([DLfa;DDDDDDDDLfa;DDD)Lfa;
		ARG 18 maxZ
	METHOD b getXSize ()D
	METHOD b stretch (DDD)Lcrd;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD b union (Lcrd;)Lcrd;
	METHOD b offset (Lcri;)Lcrd;
		ARG 1 vec3d
	METHOD b rayTrace (Lcri;Lcri;)Ljava/util/Optional;
	METHOD b getMax (Lfa$a;)D
		ARG 1 axis
	METHOD c getYSize ()D
	METHOD c expand (DDD)Lcrd;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD c intersects (Lcrd;)Z
		ARG 1 boundingBox
	METHOD c contains (Lcri;)Z
		ARG 1 vec
	METHOD d getZSize ()D
	METHOD d offset (DDD)Lcrd;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD e isValid ()Z
	METHOD e contains (DDD)Z
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD equals (Ljava/lang/Object;)Z
		ARG 1 o
	METHOD f getCenter ()Lcri;
	METHOD f contract (DDD)Lcrd;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD g expand (D)Lcrd;
		ARG 1 value
	METHOD h contract (D)Lcrd;
		ARG 1 value
