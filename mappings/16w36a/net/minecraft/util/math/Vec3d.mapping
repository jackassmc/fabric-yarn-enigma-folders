CLASS none/bcu net/minecraft/util/math/Vec3d
	FIELD a ZERO Lnone/bcu;
	FIELD b x D
	FIELD c y D
	FIELD d z D
	METHOD <init> (DDD)V
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD <init> (Lnone/dk;)V
		ARG 0 vec
	METHOD a normalize ()Lnone/bcu;
	METHOD a multiply (D)Lnone/bcu;
		ARG 0 scale
	METHOD a subtract (DDD)Lnone/bcu;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a rotateX (F)Lnone/bcu;
		ARG 0 radians
	METHOD a fromPolar (FF)Lnone/bcu;
		ARG 0 pitch
		ARG 1 yaw
	METHOD a fromPolar (Lnone/bct;)Lnone/bcu;
		ARG 0 polar
	METHOD a reverseSubtract (Lnone/bcu;)Lnone/bcu;
		ARG 0 vec
	METHOD a castByX (Lnone/bcu;D)Lnone/bcu;
		ARG 0 target
		ARG 1 newX
	METHOD b length ()D
	METHOD b add (DDD)Lnone/bcu;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD b rotateY (F)Lnone/bcu;
		ARG 0 radians
	METHOD b dotProduct (Lnone/bcu;)D
		ARG 0 vec
	METHOD b castByY (Lnone/bcu;D)Lnone/bcu;
		ARG 0 target
		ARG 1 newY
	METHOD c lengthSquared ()D
	METHOD c squaredDistanceTo (DDD)D
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD c crossProduct (Lnone/bcu;)Lnone/bcu;
		ARG 0 vec
	METHOD c castByZ (Lnone/bcu;D)Lnone/bcu;
		ARG 0 target
		ARG 1 newZ
	METHOD d subtract (Lnone/bcu;)Lnone/bcu;
		ARG 0 vec
	METHOD e add (Lnone/bcu;)Lnone/bcu;
		ARG 0 vec
	METHOD equals (Ljava/lang/Object;)Z
		ARG 0 other
	METHOD f distanceTo (Lnone/bcu;)D
		ARG 0 vec
	METHOD g squaredDistanceTo (Lnone/bcu;)D
		ARG 0 vec
