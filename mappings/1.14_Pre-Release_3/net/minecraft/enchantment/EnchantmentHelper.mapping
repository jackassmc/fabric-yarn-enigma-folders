CLASS bfh net/minecraft/enchantment/EnchantmentHelper
	CLASS bfh$a Consumer
		METHOD accept (Lbff;I)V
			ARG 1 enchantment
			ARG 2 level
	METHOD a getHighestApplicableEnchantmentsAtPower (ILbbx;Z)Ljava/util/List;
		ARG 0 power
		ARG 1 stack
	METHOD a getSweepingMultiplier (Laim;)F
		ARG 0 entity
	METHOD a onUserDamaged (Laim;Laid;)V
		ARG 0 user
		ARG 1 attacker
	METHOD a getEnchantments (Lbbx;)Ljava/util/Map;
		ARG 0 stack
	METHOD a getAttackDamage (Lbbx;Laiq;)F
		ARG 0 stack
		ARG 1 group
	METHOD a getEquipmentLevel (Lbff;Laim;)I
		ARG 0 ench
		ARG 1 entity
	METHOD a getLevel (Lbff;Lbbx;)I
		ARG 0 enchantment
		ARG 1 stack
	METHOD a accept (Lbfh$a;Lbbx;)V
		ARG 0 enchantmentHandler
		ARG 1 stack
	METHOD a accept (Lbfh$a;Ljava/lang/Iterable;)V
		ARG 0 enchantmentHandler
		ARG 1 stacks
	METHOD a getProtectionAmount (Ljava/lang/Iterable;Lahm;)I
		ARG 0 equipment
		ARG 1 source
	METHOD a contains (Ljava/util/Collection;Lbff;)Z
		ARG 0 collection
		ARG 1 enchantment
	METHOD a remove (Ljava/util/List;Lbfi;)V
		ARG 0 infos
		ARG 1 info
	METHOD a set (Ljava/util/Map;Lbbx;)V
		ARG 0 enchantments
		ARG 1 stack
	METHOD a calculateEnchantmentPower (Ljava/util/Random;IILbbx;)I
		ARG 0 random
		ARG 1 num
		ARG 2 enchantmentPower
		ARG 3 rstack
	METHOD a enchant (Ljava/util/Random;Lbbx;IZ)Lbbx;
		ARG 0 random
		ARG 1 target
		ARG 2 level
		ARG 3 hasTreasure
	METHOD b getKnockback (Laim;)I
		ARG 0 entity
	METHOD b onTargetDamaged (Laim;Laid;)V
		ARG 0 user
		ARG 1 target
	METHOD b getLuckOfTheSea (Lbbx;)I
		ARG 0 stack
	METHOD b getRandomEnchantedEquipment (Lbff;Laim;)Ljava/util/Map$Entry;
	METHOD b getEnchantments (Ljava/util/Random;Lbbx;IZ)Ljava/util/List;
		ARG 0 random
		ARG 1 stack
		ARG 2 level
		ARG 3 hasTreasure
	METHOD c getFireAspect (Laim;)I
		ARG 0 entity
	METHOD c getLure (Lbbx;)I
		ARG 0 stack
	METHOD d getRespiration (Laim;)I
		ARG 0 entity
	METHOD d hasBindingCurse (Lbbx;)Z
		ARG 0 stack
	METHOD e getDepthStrider (Laim;)I
		ARG 0 entity
	METHOD e hasVanishingCurse (Lbbx;)Z
		ARG 0 stack
	METHOD f getEfficiency (Laim;)I
		ARG 0 entity
	METHOD f getLoyalty (Lbbx;)I
		ARG 0 stack
	METHOD g getLooting (Laim;)I
		ARG 0 entity
	METHOD g getRiptide (Lbbx;)I
		ARG 0 stack
	METHOD h hasAquaAffinity (Laim;)Z
		ARG 0 entity
	METHOD h hasChanneling (Lbbx;)Z
		ARG 0 stack
	METHOD i hasFrostWalker (Laim;)Z
		ARG 0 entity
