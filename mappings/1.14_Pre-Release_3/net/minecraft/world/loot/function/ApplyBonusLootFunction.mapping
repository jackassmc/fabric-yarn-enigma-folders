CLASS cpg net/minecraft/world/loot/function/ApplyBonusLootFunction
	CLASS cpg$a BinomialWithBonusCount
		FIELD a ID Lqs;
		FIELD b extra I
		FIELD c probability F
		METHOD <init> (IF)V
			ARG 1 extra
			ARG 2 probability
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpg$b;
			ARG 0 parametersJson
			ARG 1 context
	CLASS cpg$b Formula
		METHOD a getId ()Lqs;
		METHOD a toJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V
			ARG 1 parametersJson
			ARG 2 context
		METHOD a getValue (Ljava/util/Random;II)I
			ARG 1 random
			ARG 2 initialCount
			ARG 3 enchantmentLevel
	CLASS cpg$c FormulaFactory
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpg$b;
			ARG 1 functionJson
			ARG 2 context
	CLASS cpg$d OreDrops
		FIELD a ID Lqs;
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpg$b;
			ARG 0 parametersJson
			ARG 1 context
	CLASS cpg$e Factory
	CLASS cpg$f UniformBonusCount
		FIELD a ID Lqs;
		FIELD b bonusMultiplier I
		METHOD <init> (I)V
			ARG 1 bonusMultiplier
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpg$b;
			ARG 0 parametersJson
			ARG 1 context
	FIELD a FACTORIES Ljava/util/Map;
	FIELD c enchantment Lbff;
	FIELD d formula Lcpg$b;
	METHOD <init> ([Lcqu;Lbff;Lcpg$b;)V
		ARG 1 conditions
		ARG 2 enchantment
		ARG 3 formula
	METHOD a oreDrops (Lbff;)Lcpq$a;
		ARG 0 enchantment
	METHOD a binomialWithBonusCount (Lbff;FI)Lcpq$a;
		ARG 0 enchantment
		ARG 1 probability
		ARG 2 extra
	METHOD a uniformBonusCount (Lbff;I)Lcpq$a;
		ARG 0 enchantment
		ARG 1 bonusMultiplier
	METHOD a (Lbff;IF[Lcqu;)Lcpr;
		ARG 3 conditions
	METHOD a (Lbff;I[Lcqu;)Lcpr;
		ARG 2 conditions
	METHOD a (Lbff;[Lcqu;)Lcpr;
		ARG 1 conditions
	METHOD b uniformBonusCount (Lbff;)Lcpq$a;
		ARG 0 enchantment
	METHOD b (Lbff;[Lcqu;)Lcpr;
		ARG 1 conditions
