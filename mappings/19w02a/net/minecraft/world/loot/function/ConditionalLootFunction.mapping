CLASS cks net/minecraft/world/loot/function/ConditionalLootFunction
	CLASS cks$a Builder
		FIELD a conditionList Ljava/util/List;
		METHOD a withCondition (Lclw$a;)Lcks$a;
		METHOD b withCondition (Lclw$a;)Ljava/lang/Object;
		METHOD c getThis ()Ljava/lang/Object;
		METHOD d build ()Lcks$a;
		METHOD g getConditions ()[Lclw;
	CLASS cks$b Joiner
		FIELD a joiner Ljava/util/function/Function;
		METHOD a create ()Lcks$b;
		METHOD b build ()Lckt;
		METHOD d build ()Lcks$a;
	CLASS cks$c Factory
		METHOD a toJson (Lcom/google/gson/JsonObject;Lcks;Lcom/google/gson/JsonSerializationContext;)V
		METHOD a toJson (Lcom/google/gson/JsonObject;Lckt;Lcom/google/gson/JsonSerializationContext;)V
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcks;
		METHOD b fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lckt;
		METHOD b fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lclw;)Lcks;
	FIELD a predicate Ljava/util/function/Predicate;
	FIELD b conditions [Lclw;
	METHOD a process (Laxd;Lcjk;)Laxd;
		ARG 1 stack
	METHOD a check (Lcjo;Ljava/util/function/Function;Ljava/util/Set;Lclj;)V
	METHOD a create (Ljava/util/function/Function;)Lcks$a;
	METHOD b apply (Laxd;Lcjk;)Laxd;
