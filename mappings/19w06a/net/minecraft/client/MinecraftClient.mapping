CLASS cqg net/minecraft/client/MinecraftClient
	FIELD E LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD F cachedMaxTextureSize I
	FIELD G resourcePackDir Ljava/io/File;
	FIELD H sessionPropertyMap Lcom/mojang/authlib/properties/PropertyMap;
	FIELD I windowSettings Lcor;
	FIELD J currentServerEntry Ldcp;
	FIELD K textureManager Ldpe;
	FIELD L instance Lcqg;
	FIELD M dataFixer Lcom/mojang/datafixers/DataFixer;
	FIELD N windowProvider Ldfz;
	FIELD O crashed Z
	FIELD P crashReport Lb;
	FIELD Q connectedToRealms Z
	FIELD R renderTickCounter Lcqm;
	FIELD S snooper Lagl;
	FIELD T entityRenderManager Ldkf;
	FIELD U itemRenderer Ldkz;
	FIELD V firstPersonRenderer Ldfm;
	FIELD W searchManager Ldrv;
	FIELD X session Lcqn;
	FIELD Y isPaused Z
	FIELD Z pausedTickDelta F
	FIELD aA soundLoader Ldsj;
	FIELD aB musicTracker Ldsg;
	FIELD aC fontManager Lcsp;
	FIELD aD splashTextLoader Ldpu;
	FIELD aE sessionService Lcom/mojang/authlib/minecraft/MinecraftSessionService;
	FIELD aF skinProvider Ldpt;
	FIELD aG thread Ljava/lang/Thread;
	FIELD aH bakedModelManager Ldqs;
	FIELD aI blockRenderManager Ldge;
	FIELD aJ toastManager Lcsl;
	FIELD aK game Lcqb;
	FIELD aL isRunning Z
	FIELD aM nextDebugInfoUpdateTime J
	FIELD aN fpsCounter I
	FIELD aO tutorialManager Ldst;
	FIELD aP isWindowFocused Z
	FIELD aQ renderTaskQueue Ljava/util/Queue;
	FIELD aR openProfilerSection Ljava/lang/String;
	FIELD a isSystemMac Z
	FIELD aa server Ldsa;
	FIELD ac creativeHotbarStorage Lcqd;
	FIELD ad assetDirectory Ljava/io/File;
	FIELD ae gameVersion Ljava/lang/String;
	FIELD af versionType Ljava/lang/String;
	FIELD ag netProxy Ljava/net/Proxy;
	FIELD ah levelStorage Lcji;
	FIELD ai currentFps I
	FIELD aj itemUseCooldown I
	FIELD ak autoConnectServerIp Ljava/lang/String;
	FIELD al autoConnectServerPort I
	FIELD am lastMetricsSampleTime J
	FIELD an is64Bit Z
	FIELD ao isDemo Z
	FIELD ap clientConnection Liq;
	FIELD aq isIntegratedServerRunning Z
	FIELD ar profiler Laff;
	FIELD as resourceManager Lwp;
	FIELD at resourcePackCreator Ldpl;
	FIELD au resourcePackContainerManager Lwf;
	FIELD av languageManager Ldpy;
	FIELD aw blockColorMap Lcqp;
	FIELD ax itemColorMap Lcqs;
	FIELD ay framebuffer Lcoo;
	FIELD az spriteAtlas Ldpc;
	FIELD b defaultFontRendererId Lqd;
	FIELD c altFontRendererId Lqd;
	FIELD d memoryReservedForCrash [B
	FIELD e interactionManager Ldcl;
	FIELD f window Lcpd;
	FIELD g world Ldcm;
	FIELD h worldRenderer Ldfo;
	FIELD i player Ldex;
	FIELD j cameraEntity Lahi;
	FIELD k targetedEntity Lahi;
	FIELD l particleManager Lddv;
	FIELD m fontRenderer Lcqu;
	FIELD n currentScreen Lcun;
	FIELD o gameRenderer Ldfk;
	FIELD p debugRenderer Ldiv;
	FIELD q attackCooldown I
	FIELD r inGameHud Lcqv;
	FIELD s skipGameRender Z
	FIELD t hitResult Lcmx;
	FIELD u options Lcqi;
	FIELD v mouse Lcqh;
	FIELD w keyboard Lcqf;
	FIELD x runDirectory Ljava/io/File;
	FIELD y metricsData Lyx;
	FIELD z fpsDebugString Ljava/lang/String;
	METHOD A isIntegratedServerRunning ()Z
	METHOD B getServer ()Ldsa;
	METHOD C getSnooper ()Lagl;
	METHOD D getSession ()Lcqn;
	METHOD E getSessionProperties ()Lcom/mojang/authlib/properties/PropertyMap;
	METHOD F getNetworkProxy ()Ljava/net/Proxy;
	METHOD G getTextureManager ()Ldpe;
	METHOD H getResourceManager ()Lwr;
	METHOD J getResourcePackDownloader ()Ldpl;
	METHOD K getResourcePackDir ()Ljava/io/File;
	METHOD L getLanguageManager ()Ldpy;
	METHOD M getSpriteAtlas ()Ldpc;
	METHOD N is64Bit ()Z
	METHOD P getSoundLoader ()Ldsj;
	METHOD R getMusicType ()Ldsg$a;
	METHOD S getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService;
	METHOD T getSkinProvider ()Ldpt;
	METHOD U getCameraEntity ()Lahi;
	METHOD V getBlockRenderManager ()Ldge;
	METHOD W getEntityRenderManager ()Ldkf;
	METHOD X getItemRenderer ()Ldkz;
	METHOD Y getFirstPersonRenderer ()Ldfm;
	METHOD Z getCurrentFps ()I
	METHOD a handleProfilerKeyPress (I)V
		ARG 1 digit
	METHOD a handleGlErrorByDisableVsync (IJ)V
		ARG 1 error
		ARG 2 description
	METHOD a setCameraEntity (Lahi;)V
		ARG 1 entity
	METHOD a addBlockEntityNbt (Laxm;Lbow;)Laxm;
		ARG 1 stack
		ARG 2 blockEntity
	METHOD a setCrashReport (Lb;)V
	METHOD a openScreen (Lcun;)V
		ARG 1 screen
	METHOD a setCurrentServerEntry (Ldcp;)V
	METHOD a getSearchableContainer (Ldrv$a;)Ldrs;
		ARG 1 key
	METHOD a startIntegratedServer (Ljava/lang/String;Ljava/lang/String;Lbcy;)V
		ARG 1 name
		ARG 2 displayName
	METHOD aA isFramerateLimited ()Z
	METHOD aB drawProfilerResults ()V
	METHOD aC doAttack ()V
	METHOD aD doItemUse ()V
	METHOD aE handleInputEvents ()V
	METHOD aF doItemPick ()V
	METHOD aG getCurrentAction ()Ljava/lang/String;
	METHOD aa getMetricsData ()Lyx;
	METHOD ab isConnectedToRealms ()Z
	METHOD ac getDataFixer ()Lcom/mojang/datafixers/DataFixer;
	METHOD ac_ openPauseMenu ()V
	METHOD ad getTickDelta ()F
	METHOD af getBlockColorMap ()Lcqp;
	METHOD ah hasReducedDebugInfo ()Z
	METHOD ai getToastManager ()Lcsl;
	METHOD aj getTutorialManager ()Ldst;
	METHOD ak isWindowFocused ()Z
	METHOD al getCreativeHotbarStorage ()Lcqd;
	METHOD am getBakedModelManager ()Ldqs;
	METHOD an getFontManager ()Lcsp;
	METHOD ao getProfiler ()Lafj;
	METHOD ap getGame ()Lcqb;
	METHOD ar getSplashTextLoader ()Ldpu;
	METHOD as init ()V
	METHOD at initializeSearchableContainers ()V
	METHOD au checkIs64Bit ()Z
	METHOD av startTimerHackThread ()V
	METHOD ay checkGameData ()V
	METHOD az getFramerateLimit ()I
	METHOD b start ()V
	METHOD b populateCrashReport (Lb;)Lb;
		ARG 1 report
	METHOD c getFramebuffer ()Lcoo;
	METHOD c printCrashReport (Lb;)V
	METHOD c setConnectedToRealms (Z)V
		ARG 1 connectedToRealms
	METHOD d getGameVersion ()Ljava/lang/String;
	METHOD d render (Z)V
		ARG 1 fullRender
	METHOD e getVersionType ()Ljava/lang/String;
	METHOD f forcesUnicodeFont ()Z
	METHOD g reloadResources ()V
	METHOD h getLevelStorage ()Lcji;
	METHOD i stop ()V
	METHOD j cleanUpAfterCrash ()V
	METHOD k scheduleStop ()V
	METHOD m getMusicTracker ()Ldsg;
	METHOD n tick ()V
	METHOD q isDemo ()Z
	METHOD r getNetworkHandler ()Ldcj;
	METHOD t isFancyGraphicsEnabled ()Z
	METHOD u isAmbientOcclusionEnabled ()Z
	METHOD v getInstance ()Lcqg;
	METHOD w reloadResourcesConcurrently ()Ljava/util/concurrent/CompletableFuture;
	METHOD x getMaxTextureSize ()I
	METHOD y getCurrentServerEntry ()Ldcp;
	METHOD z isInSingleplayer ()Z
