CLASS alx net/minecraft/block/BlockRedstoneGateBase
	FIELD c BOUNDING_BOX Lbcs;
	FIELD d powered Z
	METHOD <init> (Z)V
		ARG 0 powered
	METHOD A isValidInput (Lasm;)Z
		ARG 0 state
	METHOD B isGate (Lasm;)Z
		ARG 0 state
	METHOD C matchesType (Lasm;)Z
		ARG 0 other
	METHOD D getUpdateDelay (Lasm;)I
		ARG 0 state
	METHOD a canPlaceAt (Laiw;Lcn;)Z
		ARG 0 world
		ARG 1 pos
	METHOD a (Laiw;Lcn;Lasm;Ljava/util/Random;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 random
	METHOD a onPlaced (Laiw;Lcn;Lasm;Lsp;Laes;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 placer
		ARG 4 stack
	METHOD a getStateForPlacement (Laiw;Lcn;Lcu;FFFILsp;)Lasm;
		ARG 0 world
		ARG 1 pos
		ARG 2 facing
		ARG 3 hitX
		ARG 4 hitY
		ARG 5 hitZ
		ARG 6 metadata
		ARG 7 player
	METHOD a getOutputLevel (Laja;Lcn;Lasm;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 state
	METHOD a update (Lasm;Laiw;Lcn;Laky;)V
		ARG 0 state
		ARG 1 world
		ARG 2 pos
		ARG 3 changedBlock
	METHOD a shouldRenderSide (Lasm;Laja;Lcn;Lcu;)Z
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facing
	METHOD b randomTick (Laiw;Lcn;Lasm;Ljava/util/Random;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 random
	METHOD b getInputLevel (Laja;Lcn;Lcu;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 facing
	METHOD b isEqual (Laky;)Z
		ARG 0 block
	METHOD b isFullBoundsCubeForCulling (Lasm;)Z
		ARG 0 state
	METHOD b getBoundingBox (Lasm;Laja;Lcn;)Lbcs;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD b getWeakRedstonePower (Lasm;Laja;Lcn;Lcu;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD c (Laiw;Lcn;Lasm;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD c getMaxInputLevelSides (Laja;Lcn;Lasm;)I
		ARG 0 view
		ARG 1 pos
		ARG 2 facing
	METHOD c (Lasm;)Z
		ARG 0 state
	METHOD c getStrongRedstonePower (Lasm;Laja;Lcn;Lcu;)I
		ARG 0 state
		ARG 1 view
		ARG 2 pos
		ARG 3 facingFrom
	METHOD d (Laiw;Lcn;Lasm;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD f getRenderLayer ()Laio;
	METHOD f (Laiw;Lcn;Lasm;)I
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD g emitsRedstonePower (Lasm;)Z
		ARG 0 state
	METHOD i getUpdateDelayInternal (Lasm;)I
		ARG 0 state
	METHOD x getPoweredState (Lasm;)Lasm;
		ARG 0 state
	METHOD y getUnpoweredState (Lasm;)Lasm;
		ARG 0 state
	METHOD z isPowered (Lasm;)Z
		ARG 0 state
