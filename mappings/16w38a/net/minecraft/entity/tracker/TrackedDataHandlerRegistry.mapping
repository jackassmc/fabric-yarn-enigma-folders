CLASS kl net/minecraft/entity/tracker/TrackedDataHandlerRegistry
	CLASS kl$1
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ljava/lang/Byte;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ljava/lang/Byte;
			ARG 0 buf
	CLASS kl$2
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lcn;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lcn;
			ARG 0 buf
	CLASS kl$3
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lcom/google/common/base/Optional;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lcom/google/common/base/Optional;
			ARG 0 buf
	CLASS kl$4
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lcu;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lcu;
			ARG 0 buf
	CLASS kl$5
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lcom/google/common/base/Optional;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lcom/google/common/base/Optional;
			ARG 0 buf
	CLASS kl$6
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ljava/lang/Integer;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ljava/lang/Integer;
			ARG 0 buf
	CLASS kl$7
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ljava/lang/Float;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ljava/lang/Float;
			ARG 0 buf
	CLASS kl$8
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/String;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ljava/lang/String;
			ARG 0 buf
	CLASS kl$9
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lfa;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lfa;
			ARG 0 buf
	CLASS kl$10
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Laes;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Laes;
			ARG 0 buf
	CLASS kl$11
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Lcom/google/common/base/Optional;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Lcom/google/common/base/Optional;
			ARG 0 buf
	CLASS kl$12
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ljava/lang/Boolean;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ljava/lang/Boolean;
			ARG 0 buf
	CLASS kl$13
		METHOD a create (I)Lkj;
			ARG 0 id
		METHOD a read (Les;)Ljava/lang/Object;
			ARG 0 buf
		METHOD a write (Les;Ldh;)V
			ARG 0 buf
			ARG 1 data
		METHOD a write (Les;Ljava/lang/Object;)V
			ARG 0 buf
			ARG 1 data
		METHOD b read (Les;)Ldh;
			ARG 0 buf
	FIELD a BYTE Lkk;
	FIELD b INTEGER Lkk;
	FIELD c FLOAT Lkk;
	FIELD d STRING Lkk;
	FIELD e TEXT_COMPONENT Lkk;
	FIELD f ITEM_STACK Lkk;
	FIELD g OPTIONAL_BLOCK_STATE Lkk;
	FIELD h BOOLEAN Lkk;
	FIELD i ROTATION Lkk;
	FIELD j BLOCK_POS Lkk;
	FIELD k OPTIONAL_BLOCK_POS Lkk;
	FIELD l FACING Lkk;
	FIELD m OPTIONAL_UUID Lkk;
	FIELD n REGISTRY Lof;
	METHOD a get (I)Lkk;
		ARG 0 id
	METHOD a register (Lkk;)V
		ARG 0 handler
	METHOD b getId (Lkk;)I
		ARG 0 handler
