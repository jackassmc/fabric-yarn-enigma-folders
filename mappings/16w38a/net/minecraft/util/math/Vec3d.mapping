CLASS bcv net/minecraft/util/math/Vec3d
	FIELD a ZERO Lbcv;
	FIELD b x D
	FIELD c y D
	FIELD d z D
	METHOD <init> (DDD)V
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD <init> (Ldk;)V
		ARG 0 vec
	METHOD a normalize ()Lbcv;
	METHOD a multiply (D)Lbcv;
		ARG 0 scale
	METHOD a subtract (DDD)Lbcv;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a rotateX (F)Lbcv;
		ARG 0 radians
	METHOD a fromPolar (FF)Lbcv;
		ARG 0 pitch
		ARG 1 yaw
	METHOD a fromPolar (Lbcu;)Lbcv;
		ARG 0 polar
	METHOD a reverseSubtract (Lbcv;)Lbcv;
		ARG 0 vec
	METHOD a castByX (Lbcv;D)Lbcv;
		ARG 0 target
		ARG 1 newX
	METHOD b length ()D
	METHOD b add (DDD)Lbcv;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD b rotateY (F)Lbcv;
		ARG 0 radians
	METHOD b dotProduct (Lbcv;)D
		ARG 0 vec
	METHOD b castByY (Lbcv;D)Lbcv;
		ARG 0 target
		ARG 1 newY
	METHOD c lengthSquared ()D
	METHOD c squaredDistanceTo (DDD)D
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD c crossProduct (Lbcv;)Lbcv;
		ARG 0 vec
	METHOD c castByZ (Lbcv;D)Lbcv;
		ARG 0 target
		ARG 1 newZ
	METHOD d subtract (Lbcv;)Lbcv;
		ARG 0 vec
	METHOD e add (Lbcv;)Lbcv;
		ARG 0 vec
	METHOD equals (Ljava/lang/Object;)Z
		ARG 0 other
	METHOD f distanceTo (Lbcv;)D
		ARG 0 vec
	METHOD g squaredDistanceTo (Lbcv;)D
		ARG 0 vec
