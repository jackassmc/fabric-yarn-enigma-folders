CLASS cu net/minecraft/util/math/Facing
	CLASS cu$a Axis
		FIELD a X Lcu$a;
		FIELD b Y Lcu$a;
		FIELD c Z Lcu$a;
		FIELD d BY_NAME_MAP Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f plane Lcu$c;
		METHOD <init> (Ljava/lang/String;ILjava/lang/String;Lcu$c;)V
			ARG 0 name
			ARG 1 plane
		METHOD a getName ()Ljava/lang/String;
		METHOD a matches (Lcu;)Z
			ARG 0 facing
		METHOD a byName (Ljava/lang/String;)Lcu$a;
			ARG 0 name
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lcu$c;
		METHOD m asString ()Ljava/lang/String;
		METHOD values values ()[Lcu$a;
	CLASS cu$b Direction
		FIELD a POSITIVE Lcu$b;
		FIELD b NEGATIVE Lcu$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;)V
			ARG 0 offset
			ARG 1 desc
		METHOD a offset ()I
	CLASS cu$c Plane
		FIELD a HORIZONTAL Lcu$c;
		FIELD b VERTICAL Lcu$c;
		METHOD a getFacings ()[Lcu;
		METHOD a apply (Lcu;)Z
			ARG 0 facing
		METHOD a getRandomFacing (Ljava/util/Random;)Lcu;
			ARG 0 random
		METHOD iterator iterator ()Ljava/util/Iterator;
	FIELD a DOWN Lcu;
	FIELD b UP Lcu;
	FIELD c NORTH Lcu;
	FIELD d SOUTH Lcu;
	FIELD e WEST Lcu;
	FIELD f EAST Lcu;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lcu$a;
	FIELD l direction Lcu$b;
	FIELD m vector Ldk;
	FIELD n ALL [Lcu;
	FIELD o HORIZONTAL [Lcu;
	FIELD p nameToFacing Ljava/util/Map;
	METHOD <init> (Ljava/lang/String;IIIILjava/lang/String;Lcu$b;Lcu$a;Ldk;)V
		ARG 0 id
		ARG 1 idOpposite
		ARG 2 idHorizontal
		ARG 3 name
		ARG 4 direction
		ARG 5 axis
		ARG 6 vector
	METHOD a getId ()I
	METHOD a fromRotation (D)Lcu;
		ARG 0 rotation
	METHOD a getFacing (FFF)Lcu;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a byId (I)Lcu;
		ARG 0 id
	METHOD a rotateClockwise (Lcu$a;)Lcu;
		ARG 0 axis
	METHOD a get (Lcu$b;Lcu$a;)Lcu;
		ARG 0 direction
		ARG 1 axis
	METHOD a byName (Ljava/lang/String;)Lcu;
		ARG 0 name
	METHOD a random (Ljava/util/Random;)Lcu;
		ARG 0 rand
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Lcu;
		ARG 0 value
	METHOD c getDirection ()Lcu$b;
	METHOD d getOpposite ()Lcu;
	METHOD e rotateYClockwise ()Lcu;
	METHOD f rotateYCounterclockwise ()Lcu;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lcu$a;
	METHOD l asRotation ()F
	METHOD m asString ()Ljava/lang/String;
	METHOD n getVector ()Ldk;
	METHOD o rotateXClockwise ()Lcu;
	METHOD q rotateZClockwise ()Lcu;
	METHOD values values ()[Lcu;
