CLASS bsb net/minecraft/world/chunk/ChunkStatus
	CLASS bsb$a Task
		METHOD doWork (Lbsb;Lbci;Lbrx;Luv;Ljava/util/function/Function;Ljava/util/List;Lbrw;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 targetStatus
			ARG 2 world
			ARG 3 generator
			ARG 4 lightingProvider
			ARG 5 toFullChunkConverter
			ARG 7 chunk
	CLASS bsb$b ChunkType
		FIELD a PROTOCHUNK Lbsb$b;
		FIELD b LEVELCHUNK Lbsb$b;
	CLASS bsb$c SimpleTask
		METHOD doWork (Lbci;Lbrx;Ljava/util/List;Lbrw;)V
			ARG 1 world
			ARG 2 generator
			ARG 4 chunk
		METHOD doWork (Lbsb;Lbci;Lbrx;Luv;Ljava/util/function/Function;Ljava/util/List;Lbrw;)Ljava/util/concurrent/CompletableFuture;
			ARG 1 targetStatus
			ARG 2 world
			ARG 3 generator
			ARG 4 lightingProvider
			ARG 5 toFullChunkConverter
			ARG 7 chunk
	FIELD a EMPTY Lbsb;
	FIELD b STRUCTURE_STARTS Lbsb;
	FIELD c STRUCTURE_REFERENCES Lbsb;
	FIELD d BIOMES Lbsb;
	FIELD e NOISE Lbsb;
	FIELD f SURFACE Lbsb;
	FIELD g CARVERS Lbsb;
	FIELD h LIQUID_CARVERS Lbsb;
	FIELD i FEATURES Lbsb;
	FIELD j LIGHT Lbsb;
	FIELD k SPAWN Lbsb;
	FIELD l HEIGHTMAPS Lbsb;
	FIELD m FULL Lbsb;
	FIELD n DISTANCE_TO_TARGET_GENERATION_STATUS Ljava/util/List;
	FIELD o STATUS_TO_TARGET_GENERATION_RADIUS Lit/unimi/dsi/fastutil/ints/IntList;
	FIELD p name Ljava/lang/String;
	FIELD q index I
	FIELD r previous Lbsb;
	FIELD s task Lbsb$a;
	FIELD t taskMargin I
	FIELD u chunkType Lbsb$b;
	FIELD v surfaceGenerated Z
	METHOD <init> (Ljava/lang/String;Lbsb;IZLbsb$b;Lbsb$a;)V
		ARG 1 name
		ARG 2 previous
		ARG 6 task
	METHOD a createOrderedList ()Ljava/util/List;
	METHOD a getTargetGenerationStatus (I)Lbsb;
		ARG 0 distance
	METHOD a runTask (Lbci;Lbrx;Luv;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;
		ARG 2 chunkGenerator
		ARG 3 lightingProvider
		ARG 4 toFullChunkConverter
		ARG 5 region
	METHOD a getTargetGenerationRadius (Lbsb;)I
		ARG 0 status
	METHOD a get (Ljava/lang/String;)Lbsb;
		ARG 0 id
	METHOD a register (Ljava/lang/String;Lbsb;IZLbsb$b;Lbsb$a;)Lbsb;
		ARG 0 name
		ARG 1 status
		ARG 2 taskMargin
		ARG 5 task
	METHOD a register (Ljava/lang/String;Lbsb;IZLbsb$b;Lbsb$c;)Lbsb;
		ARG 0 name
		ARG 1 previousStatus
		ARG 2 taskMargin
		ARG 4 type
		ARG 5 task
	METHOD b getMaxTargetGenerationRadius ()I
	METHOD b isAfter (Lbsb;)Z
	METHOD c getIndex ()I
	METHOD d getName ()Ljava/lang/String;
	METHOD e getPrevious ()Lbsb;
	METHOD f getTaskMargin ()I
	METHOD g getChunkType ()Lbsb$b;
	METHOD h isSurfaceGenerated ()Z
	METHOD i getLightStatus ()Lbsb;
