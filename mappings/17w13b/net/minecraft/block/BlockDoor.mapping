CLASS aoo net/minecraft/block/BlockDoor
	CLASS aoo$a Half
		FIELD a UPPER Laoo$a;
		FIELD b LOWER Laoo$a;
		METHOD m asString ()Ljava/lang/String;
	CLASS aoo$b Hinge
		FIELD a LEFT Laoo$b;
		FIELD b RIGHT Laoo$b;
		METHOD m asString ()Ljava/lang/String;
	FIELD B BOX_EAST Lbfm;
	FIELD C BOX_WEST Lbfm;
	FIELD a FACING Lavr;
	FIELD b OPEN Lavq;
	FIELD c HINGE Lavs;
	FIELD d POWERED Lavq;
	FIELD e HALF Lavs;
	FIELD f BOX_NORTH Lbfm;
	FIELD g BOX_SOUTH Lbfm;
	METHOD a deserializeState (I)Lave;
		ARG 0 meta
	METHOD a canPlaceAt (Lali;Ldx;)Z
		ARG 0 world
		ARG 1 pos
	METHOD a getPickStack (Lali;Ldx;Lave;)Lahf;
		ARG 0 world
		ARG 1 pos
		ARG 2 state
	METHOD a onBreak (Lali;Ldx;Lave;Lacu;)V
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 player
	METHOD a activate (Lali;Ldx;Lave;Lacu;Lsw;Lee;FFF)Z
		ARG 0 world
		ARG 1 pos
		ARG 2 state
		ARG 3 player
		ARG 4 hand
		ARG 5 facing
		ARG 6 hitX
		ARG 7 hitY
		ARG 8 hitZ
	METHOD a setOpen (Lali;Ldx;Z)V
		ARG 0 world
		ARG 1 pos
		ARG 2 open
	METHOD a update (Lave;Lali;Ldx;Lank;Ldx;)V
		ARG 0 state
		ARG 1 world
		ARG 2 pos
		ARG 3 block
		ARG 4 updatePos
	METHOD a applyMirror (Lave;Laqm;)Lave;
		ARG 0 state
		ARG 1 mirror
	METHOD a applyRotation (Lave;Lasa;)Lave;
		ARG 0 state
		ARG 1 rotation
	METHOD a getDropItem (Lave;Ljava/util/Random;I)Lahd;
		ARG 0 state
		ARG 1 random
		ARG 2 fortune
	METHOD b createStateFactory ()Lavf;
	METHOD b isNotSolid (Lalm;Ldx;)Z
		ARG 0 view
		ARG 1 pos
	METHOD b isFullBoundsCubeForCulling (Lave;)Z
		ARG 0 state
	METHOD b getBoundingBox (Lave;Lalm;Ldx;)Lbfm;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD c getTranslatedName ()Ljava/lang/String;
	METHOD c getCombinedMeta (Lalm;Ldx;)I
		ARG 0 view
		ARG 1 pos
	METHOD c isFullBoundsCubeForConnection (Lave;)Z
		ARG 0 state
	METHOD c getRenderingState (Lave;Lalm;Ldx;)Lave;
		ARG 0 state
		ARG 1 view
		ARG 2 pos
	METHOD d isOpen (Lalm;Ldx;)Z
	METHOD e serializeState (Lave;)I
		ARG 0 state
	METHOD f getRenderLayer ()Lala;
	METHOD f (I)Lee;
	METHOD f getFacing (Lalm;Ldx;)Lee;
	METHOD h getDropItemInternal ()Lahd;
	METHOD h getPistonBehavior (Lave;)Lbbn;
		ARG 0 state
	METHOD i isUpperHalf (I)Z
		ARG 0 meta
	METHOD r getMapColor (Lave;)Lbbl;
		ARG 0 state
