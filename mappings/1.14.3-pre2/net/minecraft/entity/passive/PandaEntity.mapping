CLASS arg net/minecraft/entity/passive/PandaEntity
	CLASS arg$a Gene
		FIELD h VALUES [Larg$a;
		FIELD i id I
		FIELD j name Ljava/lang/String;
		FIELD k recessive Z
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;Z)V
			ARG 3 id
			ARG 4 name
			ARG 5 recessive
		METHOD a getId ()I
		METHOD a byId (I)Larg$a;
			ARG 0 id
		METHOD a byName (Ljava/lang/String;)Larg$a;
		METHOD a createRandom (Ljava/util/Random;)Larg$a;
			ARG 0 random
		METHOD b getName ()Ljava/lang/String;
		METHOD b getProductGene (Larg$a;Larg$a;)Larg$a;
			ARG 0 mainGene
			ARG 1 hiddenGene
		METHOD c isRecessive ()Z
	CLASS arg$b AttackGoal
		FIELD d panda Larg;
		METHOD <init> (Larg;DZ)V
			ARG 1 panda
			ARG 2 speed
	CLASS arg$c PandaFleeGoal
		FIELD i panda Larg;
		METHOD <init> (Larg;Ljava/lang/Class;FDD)V
			ARG 1 panda
			ARG 2 fleeFromType
			ARG 3 distance
			ARG 4 slowSpeed
			ARG 6 fastSpeed
	CLASS arg$d PandaMateGoal
		FIELD d CLOSE_PLAYER_PREDICATE Laqd;
		FIELD e panda Larg;
		FIELD f nextAskPlayerForBambooAge I
		METHOD <init> (Larg;D)V
			ARG 1 panda
			ARG 2 chance
		METHOD h isBambooClose ()Z
	CLASS arg$e SpawnData
	CLASS arg$f PandaRevengeGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;[Ljava/lang/Class;)V
			ARG 1 panda
			ARG 2 noRevengeTypes
	CLASS arg$g LieOnBackGoal
		FIELD a panda Larg;
		FIELD b nextLieOnBackAge I
		METHOD <init> (Larg;)V
			ARG 1 panda
	CLASS arg$h LookAtEntityGoal
		FIELD f panda Larg;
		METHOD <init> (Larg;Ljava/lang/Class;F)V
			ARG 1 panda
			ARG 2 targetType
			ARG 3 range
	CLASS arg$i PandaMoveControl
		FIELD i panda Larg;
	CLASS arg$j ExtinguishFireGoal
		FIELD f panda Larg;
		METHOD <init> (Larg;D)V
			ARG 1 panda
			ARG 2 speed
	CLASS arg$k PlayGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;)V
			ARG 1 panda
	CLASS arg$l PickUpFoodGoal
		FIELD b startAge I
	CLASS arg$m SneezeGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;)V
			ARG 1 panda
	FIELD bA ASK_FOR_BAMBOO_TICKS Lqi;
	FIELD bB SNEEZE_PROGRESS Lqi;
	FIELD bC EATING_TICKS Lqi;
	FIELD bD MAIN_GENE Lqi;
	FIELD bE HIDDEN_GENE Lqi;
	FIELD bF PANDA_FLAGS Lqi;
	FIELD bG shouldGetRevenge Z
	FIELD bH shouldAttack Z
	FIELD bI playingJump Lcsa;
	FIELD bJ scaredAnimationProgress F
	FIELD bK lastScaredAnimationProgress F
	FIELD bL lieOnBackAnimationProgress F
	FIELD bM lastLieOnBackAnimationProgress F
	FIELD bN rollOverAnimationProgress F
	FIELD bO lastRollOverAnimationProgress F
	FIELD bP IS_FOOD Ljava/util/function/Predicate;
	FIELD bz playingTicks I
	METHOD a setMainGene (Larg$a;)V
		ARG 1 gene
	METHOD a initGenes (Larg;Larg;)V
		ARG 1 mother
		ARG 2 father
	METHOD b setHiddenGene (Larg$a;)V
		ARG 1 gene
	METHOD d setPandaFlag (IZ)V
		ARG 1 mask
		ARG 2 value
	METHOD dV getAskForBambooTicks ()I
	METHOD dW isSneezing ()Z
	METHOD dX isScared ()Z
	METHOD dY isLyingOnBack ()Z
	METHOD dZ isEating ()Z
	METHOD eA getRandomGene ()Larg$a;
	METHOD eB stop ()V
	METHOD ee getSneezeProgress ()I
	METHOD ef getMainGene ()Larg$a;
	METHOD eg getHiddenGene ()Larg$a;
	METHOD eh isPlaying ()Z
	METHOD ei getProductGene ()Larg$a;
	METHOD ej isLazy ()Z
	METHOD ek isWorried ()Z
	METHOD el isPlayful ()Z
	METHOD en isWeak ()Z
	METHOD ep resetAttributes ()V
	METHOD es getEatingTicks ()I
	METHOD et updateEatingAnimation ()V
	METHOD eu playEatingAnimation ()V
	METHOD ev updateScaredAnimation ()V
	METHOD ew updateLieOnBackAnimation ()V
	METHOD ex updateRollOverAnimation ()V
	METHOD ey updatePlaying ()V
	METHOD ez sneeze ()V
	METHOD j canEat (Lbce;)Z
		ARG 1 stack
	METHOD r setAskForBambooTicks (I)V
		ARG 1 askForBambooTicks
	METHOD r setScared (Z)V
		ARG 1 scared
	METHOD s setSneezeProgress (I)V
		ARG 1 sneezeProgress
	METHOD s setLyingOnBack (Z)V
		ARG 1 lyingOnBack
	METHOD t setEatingTicks (I)V
		ARG 1 eatingTicks
	METHOD t setEating (Z)V
		ARG 1 eating
	METHOD u hasPandaFlag (I)Z
		ARG 1 bitmask
	METHOD u setSneezing (Z)V
		ARG 1 sneezing
	METHOD v getScaredAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD v setPlaying (Z)V
		ARG 1 playing
	METHOD w getLieOnBackAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD x getRollOverAnimationProgress (F)F
		ARG 1 tickDelta
