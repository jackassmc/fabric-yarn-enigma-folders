CLASS es net/minecraft/util/math/BlockPos
	CLASS es$1
		FIELD a connector Les$a;
		METHOD tryAdvance (Ljava/util/function/Consumer;)Z
			ARG 1 consumer
	CLASS es$2
		FIELD b minX I
		FIELD c minY I
		FIELD d minZ I
		FIELD e maxX I
		FIELD f maxY I
		FIELD g maxZ I
	CLASS es$a CuboidBlockIterator
		FIELD a startX I
		FIELD b startY I
		FIELD c startZ I
		FIELD d endX I
		FIELD e endY I
		FIELD f endZ I
		FIELD g position Les$b;
		METHOD <init> (IIIIII)V
			ARG 1 startX
			ARG 2 startY
			ARG 3 startZ
			ARG 4 endX
			ARG 5 endY
			ARG 6 endZ
		METHOD a step ()Z
	CLASS es$b Mutable
		FIELD b x I
		FIELD c y I
		FIELD d z I
		METHOD <init> (III)V
			ARG 1 y
			ARG 2 z
		METHOD a set (Lahl;)Les$b;
		METHOD c set (DDD)Les$b;
		METHOD c setOffset (Lew;)Les$b;
		METHOD c setOffset (Lew;I)Les$b;
		METHOD d set (III)Les$b;
			ARG 1 x
			ARG 2 y
			ARG 3 z
		METHOD e setOffset (III)Les$b;
		METHOD g set (Lfk;)Les$b;
		METHOD i setFromLong (J)Les$b;
		METHOD p setY (I)V
	CLASS es$c PooledMutable
		FIELD g POOL Ljava/util/List;
		METHOD <init> (III)V
			ARG 1 y
			ARG 2 z
		METHOD b getEntityPos (Lahl;)Les$c;
		METHOD c set (Lahl;)Les$c;
		METHOD d get (DDD)Les$c;
		METHOD d setOffset (Lew;)Les$c;
		METHOD d setOffset (Lew;I)Les$c;
		METHOD e set (DDD)Les$c;
		METHOD f get (III)Les$c;
		METHOD g set (III)Les$c;
		METHOD h setOffset (III)Les$c;
		METHOD j set (Lfk;)Les$c;
		METHOD r get ()Les$c;
	FIELD a ORIGIN Les;
	FIELD b LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD c SIZE_BITS_X I
	FIELD d SIZE_BITS_Z I
	FIELD f SIZE_BITS_Y I
	FIELD g BITS_X J
	FIELD h BITS_Y J
	FIELD i BITS_Z J
	FIELD j BIT_SHIFT_Z I
	FIELD k BIT_SHIFT_X I
	FIELD l BIT_MASK_CHUNK_SECTION J
	METHOD <init> (DDD)V
		ARG 1 x
	METHOD <init> (III)V
		ARG 1 x
		ARG 2 y
	METHOD a asLong ()J
	METHOD a add (DDD)Les;
		ARG 1 y
	METHOD a asLong (III)J
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a getBlocksInCuboid (IIIIII)Ljava/util/stream/Stream;
		ARG 0 minX
		ARG 1 minY
		ARG 2 minZ
		ARG 3 maxX
		ARG 4 maxY
		ARG 5 maxZ
	METHOD a toChunkSectionOrigin (J)J
	METHOD a add (JIII)J
		ARG 0 value
		ARG 2 x
		ARG 3 y
	METHOD a offset (JLew;)J
		ARG 0 value
	METHOD a iterateBoxPositions (Les;Les;)Ljava/lang/Iterable;
		ARG 0 pos1
		ARG 1 pos2
	METHOD a offset (Lew;)Les;
	METHOD a offset (Lew;I)Les;
		ARG 1 distance
	METHOD a add (Lfk;)Les;
	METHOD b up ()Les;
	METHOD b up (I)Les;
	METHOD b add (III)Les;
		ARG 1 x
		ARG 2 y
		ARG 3 z
	METHOD b iterateBoxPositions (IIIIII)Ljava/lang/Iterable;
	METHOD b isHeightInvalid (J)Z
	METHOD b subtract (Lfk;)Les;
	METHOD c down ()Les;
	METHOD c down (I)Les;
	METHOD c unpackLongX (J)I
	METHOD c crossProduct (Lfk;)Les;
	METHOD d north ()Les;
	METHOD d north (I)Les;
	METHOD d unpackLongY (J)I
	METHOD e south ()Les;
	METHOD e south (I)Les;
	METHOD e unpackLongZ (J)I
	METHOD f west ()Les;
	METHOD f west (I)Les;
	METHOD f fromLong (J)Les;
		ARG 0 value
	METHOD g east ()Les;
	METHOD g east (I)Les;
	METHOD g removeChunkSectionLocalY (J)J
	METHOD h toImmutable ()Les;
	METHOD h removeY (J)J
