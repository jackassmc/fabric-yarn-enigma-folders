CLASS cnl net/minecraft/util/math/Vec3d
	FIELD a ZERO Lcnl;
	FIELD b x D
	FIELD c y D
	FIELD d z D
	METHOD <init> (DDD)V
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD a normalize ()Lcnl;
	METHOD a multiply (D)Lcnl;
		ARG 1 mult
	METHOD a subtract (DDD)Lcnl;
		ARG 1 x
	METHOD a rotateX (F)Lcnl;
	METHOD a fromPolar (FF)Lcnl;
		ARG 0 pitch
		ARG 1 yaw
	METHOD a fromPolar (Lcnk;)Lcnl;
		ARG 0 polar
	METHOD a reverseSubtract (Lcnl;)Lcnl;
	METHOD a getComponentAlongAxis (Lex$a;)D
	METHOD a floorAlongAxes (Ljava/util/EnumSet;)Lcnl;
		ARG 1 axes
	METHOD b length ()D
	METHOD b add (DDD)Lcnl;
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD b rotateY (F)Lcnl;
	METHOD b dotProduct (Lcnl;)D
	METHOD c lengthSquared ()D
	METHOD c squaredDistanceTo (DDD)D
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD c crossProduct (Lcnl;)Lcnl;
	METHOD d multiply (DDD)Lcnl;
		ARG 1 multX
		ARG 3 multY
		ARG 5 multZ
	METHOD d subtract (Lcnl;)Lcnl;
	METHOD e add (Lcnl;)Lcnl;
	METHOD equals (Ljava/lang/Object;)Z
		ARG 1 o
	METHOD f distanceTo (Lcnl;)D
	METHOD g squaredDistanceTo (Lcnl;)D
	METHOD h multiply (Lcnl;)Lcnl;
		ARG 1 mult
