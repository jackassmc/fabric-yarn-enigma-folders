CLASS aw net/minecraft/command/selector/TargetSelectorParser
	FIELD a TARGET_SELECTOR_PATTERN Ljava/util/regex/Pattern;
	FIELD b SPLIT_COMMA Lcom/google/common/base/Splitter;
	FIELD c SPLIT_EQUALS_PAIR Lcom/google/common/base/Splitter;
	FIELD z POSITIONAL_ARGUMENTS Ljava/util/Set;
	METHOD a onePlayerOrNull (Lau;Ljava/lang/String;)Lnn;
	METHOD a oneOrNull (Lau;Ljava/lang/String;Ljava/lang/Class;)Lub;
	METHOD a extractWorld (Lau;Ljava/util/Map;)Ljava/util/List;
	METHOD a createBoundingBox (Ldx;III)Lbfm;
	METHOD a canReturnMultiple (Ljava/lang/String;)Z
	METHOD a sortAndLimit (Ljava/util/List;Ljava/util/Map;Lau;Ljava/lang/Class;Ljava/lang/String;Lbfp;)Ljava/util/List;
	METHOD a extractScoreArguments (Ljava/util/Map;)Ljava/util/Map;
	METHOD a extractRadiusPredicate (Ljava/util/Map;Lbfp;)Ljava/util/List;
	METHOD a extractCoordinate (Ljava/util/Map;Ldx;)Ldx;
	METHOD a getTargetsInWorld (Ljava/util/Map;Ljava/lang/Class;Ljava/util/List;Ljava/lang/String;Lali;Ldx;)Ljava/util/List;
	METHOD a extractEntityTypePredicate (Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;
	METHOD a extractAxis (Ljava/util/Map;Ljava/lang/String;DZ)D
	METHOD a getInt (Ljava/util/Map;Ljava/lang/String;I)I
	METHOD b targetsAsText (Lau;Ljava/lang/String;)Lgk;
	METHOD b calculateTargets (Lau;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;
	METHOD b validateType (Lau;Ljava/util/Map;)Z
	METHOD b isTargetSelector (Ljava/lang/String;)Z
	METHOD b extractExperiencePredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD b extractCoordinate (Ljava/util/Map;Lbfp;)Lbfp;
	METHOD b getString (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
	METHOD c extractScoreArgsPredicate (Lau;Ljava/util/Map;)Ljava/util/List;
	METHOD c extractGamemodePredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD d extractArguments (Ljava/lang/String;)Ljava/util/Map;
	METHOD d extractTeamPredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD e extractNamePredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD f extractTagPredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD g extractRotationPredicate (Ljava/util/Map;)Ljava/util/List;
	METHOD h isPositional (Ljava/util/Map;)Z
