CLASS ee net/minecraft/util/math/Facing
	CLASS ee$a Axis
		FIELD a X Lee$a;
		FIELD b Y Lee$a;
		FIELD c Z Lee$a;
		FIELD d BY_NAME_MAP Ljava/util/Map;
		FIELD e name Ljava/lang/String;
		FIELD f plane Lee$c;
		METHOD a getName ()Ljava/lang/String;
		METHOD a matches (Lee;)Z
		METHOD a byName (Ljava/lang/String;)Lee$a;
		METHOD b isVertical ()Z
		METHOD c isHorizontal ()Z
		METHOD d getPlane ()Lee$c;
		METHOD m asString ()Ljava/lang/String;
	CLASS ee$b Direction
		FIELD a POSITIVE Lee$b;
		FIELD b NEGATIVE Lee$b;
		FIELD c offset I
		FIELD d desc Ljava/lang/String;
		METHOD a offset ()I
	CLASS ee$c Plane
		FIELD a HORIZONTAL Lee$c;
		FIELD b VERTICAL Lee$c;
		METHOD a getFacings ()[Lee;
		METHOD a apply (Lee;)Z
		METHOD a getRandomFacing (Ljava/util/Random;)Lee;
	FIELD a DOWN Lee;
	FIELD b UP Lee;
	FIELD c NORTH Lee;
	FIELD d SOUTH Lee;
	FIELD e WEST Lee;
	FIELD f EAST Lee;
	FIELD g id I
	FIELD h idOpposite I
	FIELD i idHorizontal I
	FIELD j name Ljava/lang/String;
	FIELD k axis Lee$a;
	FIELD l direction Lee$b;
	FIELD m vector Leu;
	FIELD n ALL [Lee;
	FIELD o HORIZONTAL [Lee;
	FIELD p nameToFacing Ljava/util/Map;
	METHOD a getId ()I
	METHOD a fromRotation (D)Lee;
	METHOD a getFacing (FFF)Lee;
	METHOD a byId (I)Lee;
	METHOD a rotateClockwise (Lee$a;)Lee;
	METHOD a get (Lee$b;Lee$a;)Lee;
	METHOD a byName (Ljava/lang/String;)Lee;
	METHOD a random (Ljava/util/Random;)Lee;
	METHOD b getHorizontal ()I
	METHOD b fromHorizontal (I)Lee;
	METHOD c getDirection ()Lee$b;
	METHOD d getOpposite ()Lee;
	METHOD e rotateYClockwise ()Lee;
	METHOD f rotateYCounterclockwise ()Lee;
	METHOD g getOffsetX ()I
	METHOD h getOffsetY ()I
	METHOD i getOffsetZ ()I
	METHOD j getName ()Ljava/lang/String;
	METHOD k getAxis ()Lee$a;
	METHOD l asRotation ()F
	METHOD m asString ()Ljava/lang/String;
	METHOD n getVector ()Leu;
	METHOD o rotateXClockwise ()Lee;
	METHOD q rotateZClockwise ()Lee;
