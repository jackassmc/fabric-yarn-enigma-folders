CLASS cpr net/minecraft/world/loot/function/ApplyBonusLootFunction
	CLASS a BinomialWithBonusCount
		FIELD a ID Lqt;
		FIELD b extra I
		FIELD c probability F
		METHOD <init> (IF)V
			ARG 1 extra
			ARG 2 probability
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpr$b;
			ARG 0 json
			ARG 1 context
	CLASS b Formula
		METHOD a getId ()Lqt;
		METHOD a toJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V
			ARG 1 json
			ARG 2 context
		METHOD a getValue (Ljava/util/Random;II)I
			ARG 1 random
			ARG 2 initialCount
			ARG 3 enchantmentLevel
	CLASS c FormulaFactory
		METHOD deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpr$b;
			ARG 1 functionJson
			ARG 2 context
	CLASS d OreDrops
		FIELD a ID Lqt;
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpr$b;
			ARG 0 json
			ARG 1 context
	CLASS e Factory
	CLASS f UniformBonusCount
		FIELD a ID Lqt;
		FIELD b bonusMultiplier I
		METHOD <init> (I)V
			ARG 1 bonusMultiplier
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpr$b;
			ARG 0 json
			ARG 1 context
	FIELD a FACTORIES Ljava/util/Map;
	FIELD c enchantment Lbfo;
	FIELD d formula Lcpr$b;
	METHOD <init> ([Lcrf;Lbfo;Lcpr$b;)V
		ARG 1 conditions
		ARG 2 enchantment
		ARG 3 formula
	METHOD a oreDrops (Lbfo;)Lcqb$a;
		ARG 0 enchantment
	METHOD a binomialWithBonusCount (Lbfo;FI)Lcqb$a;
		ARG 0 enchantment
		ARG 1 probability
		ARG 2 extra
	METHOD a uniformBonusCount (Lbfo;I)Lcqb$a;
		ARG 0 enchantment
		ARG 1 bonusMultiplier
	METHOD a (Lbfo;IF[Lcrf;)Lcqc;
		ARG 3 conditions
	METHOD a (Lbfo;I[Lcrf;)Lcqc;
		ARG 2 conditions
	METHOD a (Lbfo;[Lcrf;)Lcqc;
		ARG 1 conditions
	METHOD b uniformBonusCount (Lbfo;)Lcqb$a;
		ARG 0 enchantment
	METHOD b (Lbfo;[Lcrf;)Lcqc;
		ARG 1 conditions
