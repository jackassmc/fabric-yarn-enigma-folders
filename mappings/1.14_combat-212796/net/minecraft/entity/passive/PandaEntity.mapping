CLASS arg net/minecraft/entity/passive/PandaEntity
	CLASS a Gene
		FIELD h VALUES [Larg$a;
		FIELD i id I
		FIELD j name Ljava/lang/String;
		FIELD k recessive Z
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;Z)V
			ARG 3 id
			ARG 4 name
			ARG 5 recessive
		METHOD a getId ()I
		METHOD a byId (I)Larg$a;
			ARG 0 id
		METHOD a byName (Ljava/lang/String;)Larg$a;
		METHOD a createRandom (Ljava/util/Random;)Larg$a;
			ARG 0 random
		METHOD b getName ()Ljava/lang/String;
		METHOD b getProductGene (Larg$a;Larg$a;)Larg$a;
			ARG 0 mainGene
			ARG 1 hiddenGene
		METHOD c isRecessive ()Z
	CLASS b AttackGoal
		FIELD d panda Larg;
		METHOD <init> (Larg;DZ)V
			ARG 1 panda
			ARG 2 speed
	CLASS c PandaFleeGoal
		FIELD i panda Larg;
		METHOD <init> (Larg;Ljava/lang/Class;FDD)V
			ARG 1 panda
			ARG 2 fleeFromType
			ARG 3 distance
			ARG 4 slowSpeed
			ARG 6 fastSpeed
	CLASS d PandaMateGoal
		FIELD d CLOSE_PLAYER_PREDICATE Laqd;
		FIELD e panda Larg;
		FIELD f nextAskPlayerForBambooAge I
		METHOD <init> (Larg;D)V
			ARG 1 panda
			ARG 2 chance
		METHOD h isBambooClose ()Z
	CLASS e SpawnData
	CLASS f PandaRevengeGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;[Ljava/lang/Class;)V
			ARG 1 panda
			ARG 2 noRevengeTypes
	CLASS g LieOnBackGoal
		FIELD a panda Larg;
		FIELD b nextLieOnBackAge I
		METHOD <init> (Larg;)V
			ARG 1 panda
	CLASS h LookAtEntityGoal
		FIELD f panda Larg;
		METHOD <init> (Larg;Ljava/lang/Class;F)V
			ARG 1 panda
			ARG 2 targetType
			ARG 3 range
	CLASS i PandaMoveControl
		FIELD i panda Larg;
	CLASS j ExtinguishFireGoal
		FIELD f panda Larg;
		METHOD <init> (Larg;D)V
			ARG 1 panda
			ARG 2 speed
	CLASS k PlayGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;)V
			ARG 1 panda
	CLASS l PickUpFoodGoal
		FIELD b startAge I
	CLASS m SneezeGoal
		FIELD a panda Larg;
		METHOD <init> (Larg;)V
			ARG 1 panda
	FIELD bA ASK_FOR_BAMBOO_TICKS Lqi;
	FIELD bB SNEEZE_PROGRESS Lqi;
	FIELD bC EATING_TICKS Lqi;
	FIELD bD MAIN_GENE Lqi;
	FIELD bE HIDDEN_GENE Lqi;
	FIELD bF PANDA_FLAGS Lqi;
	FIELD bG shouldGetRevenge Z
	FIELD bH shouldAttack Z
	FIELD bI playingJump Lcsc;
	FIELD bJ scaredAnimationProgress F
	FIELD bK lastScaredAnimationProgress F
	FIELD bL lieOnBackAnimationProgress F
	FIELD bM lastLieOnBackAnimationProgress F
	FIELD bN rollOverAnimationProgress F
	FIELD bO lastRollOverAnimationProgress F
	FIELD bP IS_FOOD Ljava/util/function/Predicate;
	FIELD bz playingTicks I
	METHOD a setMainGene (Larg$a;)V
		ARG 1 gene
	METHOD a initGenes (Larg;Larg;)V
		ARG 1 mother
		ARG 2 father
	METHOD b setHiddenGene (Larg$a;)V
		ARG 1 gene
	METHOD d setPandaFlag (IZ)V
		ARG 1 mask
		ARG 2 value
	METHOD dW getAskForBambooTicks ()I
	METHOD dX isSneezing ()Z
	METHOD dY isScared ()Z
	METHOD dZ isLyingOnBack ()Z
	METHOD eA sneeze ()V
	METHOD eB getRandomGene ()Larg$a;
	METHOD eC stop ()V
	METHOD ea isEating ()Z
	METHOD ef getSneezeProgress ()I
	METHOD eg getMainGene ()Larg$a;
	METHOD eh getHiddenGene ()Larg$a;
	METHOD ei isPlaying ()Z
	METHOD ej getProductGene ()Larg$a;
	METHOD ek isLazy ()Z
	METHOD el isWorried ()Z
	METHOD em isPlayful ()Z
	METHOD eo isWeak ()Z
	METHOD eq resetAttributes ()V
	METHOD et getEatingTicks ()I
	METHOD eu updateEatingAnimation ()V
	METHOD ev playEatingAnimation ()V
	METHOD ew updateScaredAnimation ()V
	METHOD ex updateLieOnBackAnimation ()V
	METHOD ey updateRollOverAnimation ()V
	METHOD ez updatePlaying ()V
	METHOD k canEat (Lbce;)Z
		ARG 1 stack
	METHOD r setScared (Z)V
		ARG 1 scared
	METHOD s setAskForBambooTicks (I)V
		ARG 1 askForBambooTicks
	METHOD s setLyingOnBack (Z)V
		ARG 1 lyingOnBack
	METHOD t setSneezeProgress (I)V
		ARG 1 sneezeProgress
	METHOD t setEating (Z)V
		ARG 1 eating
	METHOD u setEatingTicks (I)V
		ARG 1 eatingTicks
	METHOD u setSneezing (Z)V
		ARG 1 sneezing
	METHOD v hasPandaFlag (I)Z
		ARG 1 bitmask
	METHOD v setPlaying (Z)V
		ARG 1 playing
	METHOD w getScaredAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD x getLieOnBackAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD y getRollOverAnimationProgress (F)F
		ARG 1 tickDelta
