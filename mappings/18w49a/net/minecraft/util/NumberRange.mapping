CLASS bf net/minecraft/util/NumberRange
	CLASS bf$c Float
		FIELD e ANY Lbf$c;
		FIELD f minSquared Ljava/lang/Double;
		FIELD g maxSquared Ljava/lang/Double;
		METHOD <init> (Ljava/lang/Float;Ljava/lang/Float;)V
			ARG 0 min
			ARG 1 max
		METHOD a matchesSquared (D)Z
			ARG 0 value
		METHOD a fromJson (Lcom/google/gson/JsonElement;)Lbf$c;
			ARG 0 element
		METHOD a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lbf$c;
			ARG 1 min
			ARG 2 max
		METHOD a squared (Ljava/lang/Float;)Ljava/lang/Double;
			ARG 0 value
		METHOD b atLeast (F)Lbf$c;
			ARG 0 value
		METHOD d matches (F)Z
			ARG 0 value
	CLASS bf$d Integer
		FIELD e ANY Lbf$d;
		FIELD f minSquared Ljava/lang/Long;
		FIELD g maxSquared Ljava/lang/Long;
		METHOD <init> (Ljava/lang/Integer;Ljava/lang/Integer;)V
			ARG 0 min
			ARG 1 max
		METHOD a exactly (I)Lbf$d;
			ARG 0 value
		METHOD a fromJson (Lcom/google/gson/JsonElement;)Lbf$d;
			ARG 0 element
		METHOD a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lbf$d;
			ARG 1 min
			ARG 2 max
		METHOD a squared (Ljava/lang/Integer;)Ljava/lang/Long;
			ARG 0 value
		METHOD b atLeast (I)Lbf$d;
			ARG 0 value
		METHOD d test (I)Z
			ARG 0 value
	FIELD a EXCEPTION_EMPTY Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;
	FIELD b EXCEPTION_SWAPPED Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;
	FIELD c min Ljava/lang/Number;
	FIELD d max Ljava/lang/Number;
	METHOD <init> (Ljava/lang/Number;Ljava/lang/Number;)V
		ARG 1 min
	METHOD a getMin ()Ljava/lang/Number;
	METHOD b getMax ()Ljava/lang/Number;
	METHOD c isDummy ()Z
	METHOD d serialize ()Lcom/google/gson/JsonElement;
