CLASS ciz net/minecraft/world/loot/function/ConditionalLootFunction
	CLASS ciz$a Builder
		FIELD a conditionList Ljava/util/List;
		METHOD a withCondition (Lckd$a;)Lciz$a;
			ARG 0 builder
		METHOD b withCondition (Lckd$a;)Ljava/lang/Object;
		METHOD c getThis ()Ljava/lang/Object;
		METHOD d build ()Lciz$a;
		METHOD g getConditions ()[Lckd;
	CLASS ciz$b Joiner
		FIELD a joiner Ljava/util/function/Function;
		METHOD a create ()Lciz$b;
		METHOD b build ()Lcja;
		METHOD d build ()Lciz$a;
	CLASS ciz$c Factory
		METHOD a toJson (Lcom/google/gson/JsonObject;Lciz;Lcom/google/gson/JsonSerializationContext;)V
		METHOD a toJson (Lcom/google/gson/JsonObject;Lcja;Lcom/google/gson/JsonSerializationContext;)V
		METHOD a fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lciz;
		METHOD b fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcja;
		METHOD b fromJson (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lckd;)Lciz;
	FIELD a predicate Ljava/util/function/Predicate;
	FIELD b conditions [Lckd;
	METHOD a process (Lavu;Lchr;)Lavu;
		ARG 1 stack
	METHOD a check (Lchv;Ljava/util/function/Function;Ljava/util/Set;Lcjq;)V
	METHOD a create (Ljava/util/function/Function;)Lciz$a;
	METHOD b apply (Lavu;Lchr;)Lavu;
