CLASS bql net/minecraft/world/chunk/WorldChunk
	CLASS bql$a AccessType
		FIELD a CREATE Lbql$a;
		FIELD c GET Lbql$a;
	FIELD a EMPTY_SECTION Lbqm;
	FIELD b LOGGER Lorg/apache/logging/log4j/Logger;
	FIELD c sections [Lbqm;
	FIELD d biomeArray [Lbbr;
	FIELD e pendingBlockEntityTags Ljava/util/Map;
	FIELD f loadedToWorld Z
	FIELD g world Lbas;
	FIELD j blockEntityMap Ljava/util/Map;
	FIELD k entitySections [Lyd;
	FIELD s dirty Z
	FIELD w pos Lbag;
	METHOD <init> (Lbas;II[Lbbr;Lbqv;Lbbj;Lbbj;J[Lbqm;Ljava/util/function/Consumer;)V
		ARG 4 biomeArray
	METHOD A getBlockEntityMap ()Ljava/util/Map;
	METHOD B getEntitySectionArray ()[Lyd;
	METHOD a getFluidState (III)Lcdz;
		ARG 1 x
		ARG 2 y
	METHOD a addEntity (Lagk;)V
		ARG 1 entity
	METHOD a remove (Lagk;I)V
		ARG 1 entity
	METHOD a appendEntities (Lagk;Lckv;Ljava/util/List;Ljava/util/function/Predicate;)V
		ARG 1 except
		ARG 2 box
		ARG 3 entityList
	METHOD a addBlockEntity (Lbmq;)V
	METHOD a sampleHeightmap (Lbrs$a;II)I
		ARG 1 type
		ARG 2 x
		ARG 3 z
	METHOD a setBlockEntity (Let;Lbmq;)V
		ARG 1 pos
		ARG 2 blockEntity
	METHOD a setBlockState (Let;Lbom;Z)Lbom;
		ARG 1 pos
		ARG 2 state
	METHOD a getBlockEntity (Let;Lbql$a;)Lbmq;
		ARG 1 pos
	METHOD a loadBlockEntity (Let;Lhq;)Lbmq;
		ARG 1 pos
	METHOD a addPendingBlockEntityTag (Lhq;)V
	METHOD a appendEntities (Ljava/lang/Class;Lckv;Ljava/util/List;Ljava/util/function/Predicate;)V
		ARG 1 entityClass
		ARG 2 box
		ARG 3 entityList
	METHOD b remove (Lagk;)V
	METHOD b getHeightmap (Lbrs$a;)Lbrs;
		ARG 1 type
	METHOD b getBlockState (Let;)Lbom;
		ARG 1 pos
	METHOD c getFluidState (Let;)Lcdz;
		ARG 0 pos
	METHOD c setLoadedToWorld (Z)V
	METHOD d getSectionArray ()[Lbqm;
	METHOD d removeBlockEntity (Let;)V
	METHOD f getBlockEntity (Let;)Lbmq;
		ARG 0 pos
	METHOD g getPos ()Lbag;
	METHOD h createBlockEntity (Let;)Lbmq;
	METHOD i getBiomeArray ()[Lbbr;
	METHOD j getLuminance (Let;)I
		ARG 1 pos
	METHOD k getStatus ()Lbqe;
	METHOD s loadToWorld ()V
	METHOD t unloadFromWorld ()V
	METHOD u markDirty ()V
	METHOD y isLoadedToWorld ()Z
	METHOD z getWorld ()Lbas;
