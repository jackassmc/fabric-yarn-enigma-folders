CLASS ard net/minecraft/entity/passive/PandaEntity
	CLASS ard$a Gene
		FIELD h VALUES [Lard$a;
		FIELD i id I
		FIELD j name Ljava/lang/String;
		FIELD k recessive Z
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;Z)V
			ARG 3 id
			ARG 4 name
			ARG 5 recessive
		METHOD a getId ()I
		METHOD a byId (I)Lard$a;
			ARG 0 id
		METHOD a byName (Ljava/lang/String;)Lard$a;
		METHOD a createRandom (Ljava/util/Random;)Lard$a;
			ARG 0 random
		METHOD b getName ()Ljava/lang/String;
		METHOD b getProductGene (Lard$a;Lard$a;)Lard$a;
			ARG 0 mainGene
			ARG 1 hiddenGene
		METHOD c isRecessive ()Z
	CLASS ard$b AttackGoal
		FIELD d panda Lard;
		METHOD <init> (Lard;DZ)V
			ARG 1 panda
			ARG 2 speed
	CLASS ard$c PandaFleeGoal
		FIELD i panda Lard;
		METHOD <init> (Lard;Ljava/lang/Class;FDD)V
			ARG 1 panda
			ARG 2 fleeFromType
			ARG 3 distance
			ARG 4 slowSpeed
			ARG 6 fastSpeed
	CLASS ard$d PandaMateGoal
		FIELD d CLOSE_PLAYER_PREDICATE Laqa;
		FIELD e panda Lard;
		FIELD f nextAskPlayerForBambooAge I
		METHOD <init> (Lard;D)V
			ARG 1 panda
			ARG 2 chance
		METHOD h isBambooClose ()Z
	CLASS ard$e SpawnData
	CLASS ard$f PandaRevengeGoal
		FIELD a panda Lard;
		METHOD <init> (Lard;[Ljava/lang/Class;)V
			ARG 1 panda
			ARG 2 noRevengeTypes
	CLASS ard$g LieOnBackGoal
		FIELD a panda Lard;
		FIELD b nextLieOnBackAge I
		METHOD <init> (Lard;)V
			ARG 1 panda
	CLASS ard$h LookAtEntityGoal
		FIELD f panda Lard;
		METHOD <init> (Lard;Ljava/lang/Class;F)V
			ARG 1 panda
			ARG 2 targetType
			ARG 3 range
	CLASS ard$i PandaMoveControl
		FIELD i panda Lard;
	CLASS ard$j ExtinguishFireGoal
		FIELD f panda Lard;
		METHOD <init> (Lard;D)V
			ARG 1 panda
			ARG 2 speed
	CLASS ard$k PlayGoal
		FIELD a panda Lard;
		METHOD <init> (Lard;)V
			ARG 1 panda
	CLASS ard$l PickUpFoodGoal
		FIELD b startAge I
	CLASS ard$m SneezeGoal
		FIELD a panda Lard;
		METHOD <init> (Lard;)V
			ARG 1 panda
	FIELD bA ASK_FOR_BAMBOO_TICKS Lqh;
	FIELD bB SNEEZE_PROGRESS Lqh;
	FIELD bD EATING_TICKS Lqh;
	FIELD bE MAIN_GENE Lqh;
	FIELD bF HIDDEN_GENE Lqh;
	FIELD bG PANDA_FLAGS Lqh;
	FIELD bH shouldGetRevenge Z
	FIELD bI shouldAttack Z
	FIELD bJ playingJump Lcrx;
	FIELD bK scaredAnimationProgress F
	FIELD bL lastScaredAnimationProgress F
	FIELD bM lieOnBackAnimationProgress F
	FIELD bN lastLieOnBackAnimationProgress F
	FIELD bO rollOverAnimationProgress F
	FIELD bP lastRollOverAnimationProgress F
	FIELD bQ IS_FOOD Ljava/util/function/Predicate;
	FIELD bz playingTicks I
	METHOD a setMainGene (Lard$a;)V
		ARG 1 gene
	METHOD a initGenes (Lard;Lard;)V
		ARG 1 mother
		ARG 2 father
	METHOD b setHiddenGene (Lard$a;)V
		ARG 1 gene
	METHOD d setPandaFlag (IZ)V
		ARG 1 mask
		ARG 2 value
	METHOD dV getAskForBambooTicks ()I
	METHOD dW isSneezing ()Z
	METHOD dX isScared ()Z
	METHOD dY isLyingOnBack ()Z
	METHOD dZ isEating ()Z
	METHOD eA getRandomGene ()Lard$a;
	METHOD eB stop ()V
	METHOD ee getSneezeProgress ()I
	METHOD ef getMainGene ()Lard$a;
	METHOD eg getHiddenGene ()Lard$a;
	METHOD eh isPlaying ()Z
	METHOD ei getProductGene ()Lard$a;
	METHOD ej isLazy ()Z
	METHOD ek isWorried ()Z
	METHOD el isPlayful ()Z
	METHOD en isWeak ()Z
	METHOD ep resetAttributes ()V
	METHOD es getEatingTicks ()I
	METHOD et updateEatingAnimation ()V
	METHOD eu playEatingAnimation ()V
	METHOD ev updateScaredAnimation ()V
	METHOD ew updateLieOnBackAnimation ()V
	METHOD ex updateRollOverAnimation ()V
	METHOD ey updatePlaying ()V
	METHOD ez sneeze ()V
	METHOD j canEat (Lbcb;)Z
		ARG 1 stack
	METHOD r setAskForBambooTicks (I)V
		ARG 1 askForBambooTicks
	METHOD r setScared (Z)V
		ARG 1 scared
	METHOD s setSneezeProgress (I)V
		ARG 1 sneezeProgress
	METHOD s setLyingOnBack (Z)V
		ARG 1 lyingOnBack
	METHOD t setEatingTicks (I)V
		ARG 1 eatingTicks
	METHOD t setEating (Z)V
		ARG 1 eating
	METHOD u hasPandaFlag (I)Z
		ARG 1 bitmask
	METHOD u setSneezing (Z)V
		ARG 1 sneezing
	METHOD v getScaredAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD v setPlaying (Z)V
		ARG 1 playing
	METHOD w getLieOnBackAnimationProgress (F)F
		ARG 1 tickDelta
	METHOD x getRollOverAnimationProgress (F)F
		ARG 1 tickDelta
