CLASS arc net/minecraft/entity/passive/FoxEntity
	CLASS arc$a DefendFriendGoal
		FIELD j offender Laiu;
		FIELD k friend Laiu;
		FIELD l lastAttackedTime I
		METHOD <init> (Larc;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V
			ARG 2 targetEntityClass
			ARG 3 checkVisibility
			ARG 4 checkCanNavigate
			ARG 5 targetPredicate
	CLASS arc$b StopWanderingGoal
		FIELD a timer I
	CLASS arc$c WorriableEntityFilter
		METHOD test (Ljava/lang/Object;)Z
			ARG 1 entity
	CLASS arc$d CalmDownGoal
		FIELD b WORRIABLE_ENTITY_PREDICATE Laqd;
		METHOD g isAtFavoredLocation ()Z
		METHOD h canCalmDown ()Z
	CLASS arc$e MateGoal
		METHOD <init> (Larc;D)V
			ARG 2 chance
	CLASS arc$f EatSweetBerriesGoal
		FIELD g timer I
		METHOD <init> (Larc;DII)V
			ARG 2 speed
			ARG 4 rannge
			ARG 5 maxYDifference
		METHOD m eatSweetBerry ()V
	CLASS arc$g FoxSwimGoal
	CLASS arc$h FollowParentGoal
		FIELD b fox Larc;
		METHOD <init> (Larc;Larc;D)V
			ARG 2 fox
			ARG 3 speed
	CLASS arc$i FoxData
		FIELD a type Larc$v;
		FIELD b uses I
		METHOD <init> (Larc$v;)V
			ARG 1 type
	CLASS arc$j LookAtEntityGoal
		METHOD <init> (Larc;Laiv;Ljava/lang/Class;F)V
			ARG 2 fox
			ARG 3 targetType
			ARG 4 range
	CLASS arc$k FoxLookControl
	CLASS arc$l AttackGoal
		METHOD <init> (Larc;DZ)V
			ARG 2 speed
	CLASS arc$m FoxMoveControl
	CLASS arc$n EscapeWhenNotAggresiveGoal
		METHOD <init> (Larc;D)V
			ARG 2 speed
	CLASS arc$o JumpChasingGoal
	CLASS arc$p PickupItemGoal
	CLASS arc$q GoToVillageGoal
		METHOD <init> (Larc;II)V
			ARG 2 unused
			ARG 3 searchRange
		METHOD g canGoToVillage ()Z
	CLASS arc$r SitDownAndLookAroundGoal
		FIELD c lookX D
		FIELD d lookZ D
		FIELD e timer I
		FIELD f counter I
		METHOD j chooseNewAngle ()V
	CLASS arc$s AvoidDaylightGoal
		FIELD c timer I
		METHOD <init> (Larc;D)V
			ARG 2 speed
	CLASS arc$t DelayedCalmDownGoal
		FIELD c timer I
		METHOD j canNotCalmDown ()Z
	CLASS arc$u MoveToHuntGoal
	CLASS arc$v Type
		FIELD c TYPES [Larc$v;
		FIELD d NAME_TYPE_MAP Ljava/util/Map;
		FIELD e id I
		FIELD f key Ljava/lang/String;
		FIELD g biomes Ljava/util/List;
		METHOD <init> (Ljava/lang/String;IILjava/lang/String;[Lbij;)V
			ARG 3 id
			ARG 4 key
			ARG 5 biomes
		METHOD a getKey ()Ljava/lang/String;
		METHOD a fromId (I)Larc$v;
			ARG 0 id
		METHOD a fromBiome (Lbij;)Larc$v;
			ARG 0 biome
		METHOD a byName (Ljava/lang/String;)Larc$v;
			ARG 0 name
		METHOD b getBiomes ()Ljava/util/List;
		METHOD c getId ()I
	FIELD bA FOX_FLAGS Lqi;
	FIELD bB OWNER Lqi;
	FIELD bC OTHER_TRUSTED Lqi;
	FIELD bD PICKABLE_DROP_FILTER Ljava/util/function/Predicate;
	FIELD bE JUST_ATTACKED_SOMETHING_FILTER Ljava/util/function/Predicate;
	FIELD bF CHICKEN_AND_RABBIT_FILTER Ljava/util/function/Predicate;
	FIELD bG NOTICEABLE_PLAYER_FILTER Ljava/util/function/Predicate;
	FIELD bH followChickenAndRabbitGoal Lamz;
	FIELD bI followBabyTurtleGoal Lamz;
	FIELD bJ followFishGoal Lamz;
	FIELD bK headRollProgress F
	FIELD bL lastHeadRollProgress F
	FIELD bM extraRollingHeight F
	FIELD bN lastExtraRollingHeight F
	FIELD bO eatingTime I
	FIELD bz TYPE Lqi;
	METHOD a setType (Larc$v;)V
		ARG 1 type
	METHOD a canJumpChase (Larc;Laiu;)Z
	METHOD b addTrustedUuid (Ljava/util/UUID;)V
		ARG 1 uuid
	METHOD c canTrust (Ljava/util/UUID;)Z
	METHOD d setFoxFlag (IZ)V
		ARG 1 mask
		ARG 2 value
	METHOD dW getFoxType ()Larc$v;
	METHOD dX isSitting ()Z
	METHOD dY isWalking ()Z
	METHOD dZ isChasing ()Z
	METHOD ef isFullyCrouched ()Z
	METHOD eg isCrouching ()Z
	METHOD eh isRollingHead ()Z
	METHOD ek addTypeSpecificGoals ()V
	METHOD el getTrustedUuids ()Ljava/util/List;
	METHOD em isAggressive ()Z
	METHOD en wakeUp ()V
	METHOD eo stopActions ()V
	METHOD ep wantsToPickupItem ()Z
	METHOD j canEat (Lbce;)Z
		ARG 1 stack
	METHOD k spit (Lbce;)V
	METHOD l dropItem (Lbce;)V
	METHOD r setSitting (Z)V
		ARG 1 sitting
	METHOD s getFoxFlag (I)Z
		ARG 1 bitmask
	METHOD s setChasing (Z)V
	METHOD t setCrouching (Z)V
	METHOD u setRollingHead (Z)V
	METHOD v getHeadRoll (F)F
	METHOD v setWalking (Z)V
		ARG 1 walking
	METHOD w getBodyRotationHeightOffset (F)F
	METHOD w setAggressive (Z)V
		ARG 1 aggressive
	METHOD x setSleeping (Z)V
		ARG 1 sleeping
